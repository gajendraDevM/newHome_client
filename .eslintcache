[{"E:\\RealEstate_REST_API\\client\\src\\index.js":"1","E:\\RealEstate_REST_API\\client\\src\\App.js":"2","E:\\RealEstate_REST_API\\client\\src\\api\\index.js":"3","E:\\RealEstate_REST_API\\client\\src\\api\\authSlice.js":"4","E:\\RealEstate_REST_API\\client\\src\\components\\auth\\login.js":"5","E:\\RealEstate_REST_API\\client\\src\\key.js":"6","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\index.js":"7","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\header.js":"8","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\sidebar.js":"9","E:\\RealEstate_REST_API\\client\\src\\components\\auth\\privateRoute.js":"10","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\dropdown.js":"11","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\index.js":"12","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\createclient.js":"13","E:\\RealEstate_REST_API\\client\\src\\api\\clientSlice.js":"14","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\spin.js":"15","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\datatable.js":"16","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\deleteConfirm.js":"17","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\editClient.js":"18","E:\\RealEstate_REST_API\\client\\src\\api\\empSlice.js":"19","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\employees\\createEmployee.js":"20","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\search.js":"21","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\exportExcel.js":"22","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\employees\\index.js":"23","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\employees\\datatable.js":"24"},{"size":545,"mtime":1610770099538,"results":"25","hashOfConfig":"26"},{"size":754,"mtime":1610783199217,"results":"27","hashOfConfig":"26"},{"size":323,"mtime":1610771752780,"results":"28","hashOfConfig":"26"},{"size":2700,"mtime":1611025961461,"results":"29","hashOfConfig":"26"},{"size":2970,"mtime":1610804709347,"results":"30","hashOfConfig":"26"},{"size":142,"mtime":1610888838632,"results":"31","hashOfConfig":"26"},{"size":2869,"mtime":1611026051893,"results":"32","hashOfConfig":"26"},{"size":2523,"mtime":1610635409151,"results":"33","hashOfConfig":"26"},{"size":2855,"mtime":1610803304676,"results":"34","hashOfConfig":"26"},{"size":576,"mtime":1610634363485,"results":"35","hashOfConfig":"26"},{"size":943,"mtime":1610635297971,"results":"36","hashOfConfig":"26"},{"size":794,"mtime":1611025965138,"results":"37","hashOfConfig":"26"},{"size":6757,"mtime":1610813033217,"results":"38","hashOfConfig":"26"},{"size":4361,"mtime":1610899542819,"results":"39","hashOfConfig":"26"},{"size":527,"mtime":1610617969775,"results":"40","hashOfConfig":"26"},{"size":5042,"mtime":1610911712150,"results":"41","hashOfConfig":"26"},{"size":417,"mtime":1610617969713,"results":"42","hashOfConfig":"26"},{"size":6293,"mtime":1610651147027,"results":"43","hashOfConfig":"26"},{"size":4466,"mtime":1611026523432,"results":"44","hashOfConfig":"26"},{"size":6115,"mtime":1611024295634,"results":"45","hashOfConfig":"26"},{"size":1033,"mtime":1610891669053,"results":"46","hashOfConfig":"26"},{"size":820,"mtime":1610891411295,"results":"47","hashOfConfig":"26"},{"size":784,"mtime":1611026369928,"results":"48","hashOfConfig":"26"},{"size":4338,"mtime":1611026689064,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"53ftp6",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\RealEstate_REST_API\\client\\src\\index.js",[],["108","109"],"E:\\RealEstate_REST_API\\client\\src\\App.js",["110","111"],"import React, {useEffect} from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import Home from './components/Clientview/home'\nimport Dashboard from './components/pages'\n// import { useSelector } from 'react-redux'\n// import {layoutSelector} from './components/Api/layoutSlice'\nimport Login from './components/auth/login'\nimport PrivateRoute from './components/auth/privateRoute'\nimport './App.less';\n\nfunction App() {\n\n  return (\n    <Router>\n    <main className=\"App\" className=\" font-text\">\n<PrivateRoute path=\"/dashboard\" component={Dashboard} />\n <Route path=\"/\" component={Login} exact/> \n  {/* <Route path=\"/dashboard\" component={Dashboard} exact/>  */}\n\n    </main>\n  \n    </Router> \n  \n  );\n}\n\nexport default App;\n","E:\\RealEstate_REST_API\\client\\src\\api\\index.js",[],"E:\\RealEstate_REST_API\\client\\src\\api\\authSlice.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\auth\\login.js",["112","113","114","115"],"import React, {useEffect} from 'react'\r\nimport { Form, Input,Row, Col, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {fetchlogin, authenticateSelector} from '../../api/authSlice'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {useHistory} from 'react-router-dom'\r\nimport adminImg from '../../images/admin.jpg'\r\nimport styled from 'styled-components'\r\nexport default function Login({history}) {\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst {loading, isAuthenticate } = useSelector(authenticateSelector)\r\n// const {history} = useHistory()\r\n\r\nuseEffect(()=>{\r\n\r\nif(isAuthenticate){\r\n\r\n  return  history.push('/dashboard')\r\n} \r\n\r\n}, [isAuthenticate])\r\n\r\n\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n        dispatch(fetchlogin(values))\r\n      };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <LoginWrap className=\" flex items-center  justify-center h-screen\">\r\n          <div className=\"container    \">\r\n<Row>\r\n\r\n  <Col span={12}>\r\n  <img src={adminImg} width=\"80%\" className=\"mx-auto block\" alt=\"admin\"/>\r\n  </Col>\r\n  <Col span={12} className=\"logform\">\r\n     \r\n     <div  className=\"login-form \">\r\n     <hr className=\"border-none h-1 bg-green-500 w-14 mb-2\"/>\r\n     <h3 className=\"text-3xl mb-8 font-sans text-green-700\">Admin Login</h3>\r\n\r\n         <Form\r\n      name=\"normal_login\"\r\n    \r\n      style={{width:\"450px\"}}\r\n      initialValues={{\r\n        remember: true, \r\n      }}\r\n      onFinish={onFinish}\r\n    >\r\n      <Form.Item\r\n        name=\"email\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your Username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your Password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n      </Form.Item>\r\n  \r\n\r\n      <Form.Item className=\"border-none\">\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Log in\r\n        </Button>\r\n\r\n      </Form.Item>\r\n    </Form> \r\n    </div>\r\n    </Col>\r\n</Row>\r\n    </div>\r\n      \r\n        </LoginWrap>\r\n    )\r\n}\r\n\r\n\r\nconst LoginWrap = styled.div`\r\n\r\n.ant-input-affix-wrapper > input.ant-input {\r\n\r\n\r\n\r\n\r\nbox-shadow: none !important;\r\n&:focus{\r\n\r\n    border-color:white !important;\r\n}\r\n&:hover{\r\n\r\n    border-color:white !important;\r\n}\r\n}\r\n\r\n.logform {\r\n\r\n  position:relative;\r\n\r\n  .login-form {\r\n\r\n    position:absolute;\r\n    left:50%;\r\n    top:50%;\r\n    transform:translate(-50%, -50%);\r\n\r\n  svg {\r\n\r\n    font-size: 1.2rem !important;\r\n    color: #009c86 !important;\r\n}\r\n    \r\n  }\r\n}\r\n\r\n\r\n`","E:\\RealEstate_REST_API\\client\\src\\key.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\index.js",["116","117"],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\header.js",["118","119","120","121","122","123","124","125","126","127","128"],"import React, {useEffect, useState} from 'react'\r\nimport { MenuUnfoldOutlined, LogoutOutlined, MenuFoldOutlined } from '@ant-design/icons';\r\nimport { Layout,  Badge} from 'antd';\r\nimport styled from 'styled-components'\r\nimport {MdNotifications} from 'react-icons/md'\r\nimport {UserOutlined  } from '@ant-design/icons';\r\nimport Dropdown from '../shared/dropdown'\r\nimport {authenticateSelector} from '../../api/authSlice'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nconst { Header } = Layout;\r\n\r\nexport default function HeaderMenu({collapsed, click}) {\r\n\r\nconst dispatch = useDispatch()\r\n\r\n// useEffect(()=>{\r\n\r\n//   dispatch(fetchAllQtn())\r\n\r\n// }, [dispatch])\r\n\r\n\r\n// const {totalUnAnsweredQtn} = useSelector(qtnSelector)\r\n// const {user} = useSelector(authenticateSelector)\r\n\r\n\r\n\r\n\r\n    return (\r\n         <HeaderMenuWrap>\r\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n        <div className=\"d-flex flex-end\"> \r\n\r\n      {collapsed ?\r\n         <MenuUnfoldOutlined className=\"trigger\" onClick={()=>click()}/>\r\n          :<MenuFoldOutlined className=\"trigger\" onClick={()=>click()}/>}  \r\n\r\n\r\n {/* <div className=\"n\">\r\n<Badge size=\"small\" className=\"notification\" count={ totalUnAnsweredQtn}>\r\n   <Link to=\"/admin/experts\" style={{color:\"grey\"}}><MdNotifications style={{cursor:\"pointer\"}}/></Link> \r\n  </Badge>\r\n<span className=\"mx-3 my-auto\">\r\n  <Dropdown \r\n  username={user.curentUser.name}\r\n  userIcon={<LogoutOutlined style={{fontSize:\"1.2rem\", transform:\"translateY(-3px)\", fontWeight:\"bold\"}}/>}\r\n  icon={< UserOutlined style={{fontSize:\"1.2rem\", transform:\"translateY(-3px)\", fontWeight:\"bold\"}}/>}/> \r\n    </span>\r\n</div> */}\r\n</div>\r\n\r\n      \r\n           \r\n          </Header>\r\n\r\n     \r\n\r\n         </HeaderMenuWrap>\r\n    )\r\n}\r\n\r\nconst HeaderMenuWrap = styled.div`\r\n.n{\r\n\r\n  display:flex;\r\n  justify-content:flex-end;\r\n  line-height:64px;\r\n\r\n  width:100%;\r\n\r\n  button{\r\n\r\n    margin: auto;\r\n  }\r\n}\r\n.trigger {\r\n  font-size: 18px;\r\n  line-height: 64px;\r\n  padding: 0 24px;\r\n  cursor: pointer;\r\n  transition: color 0.3s;\r\n\r\n  &:hover{\r\n\r\n      color: var(--brandColor); \r\n  }\r\n}\r\n\r\n\r\n.ant-badge-count{\r\n\r\ntop:25px;\r\n}\r\n\r\n\r\n\r\n#components-layout-demo-custom-trigger .trigger {\r\n  font-size: 18px;\r\n  padding: 0 24px;\r\n  cursor: pointer;\r\n  transition: color 0.3s;\r\n\r\n  &:hover{\r\n\r\ncolor: var(--brandColor); \r\n}\r\n  /* &:hover{\r\n\r\n      color: #1890ff;\r\n  } */\r\n}\r\n\r\n\r\n.notification{\r\n\r\n  font-size:1.7rem;\r\n  line-height: 64px;\r\n\r\n}\r\n\r\n\r\n`\r\n","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\sidebar.js",["129","130","131","132","133","134"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Layout, Menu, Switch } from 'antd';\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport {authenticateSelector} from '../../api/authSlice'\r\nimport {useSelector} from 'react-redux'\r\nimport {\r\n  SnippetsOutlined,\r\n  QuestionCircleFilled,\r\n    FormOutlined,\r\n    AppstoreFilled,\r\n    UserOutlined ,\r\n    UsergroupAddOutlined\r\n  } from '@ant-design/icons';\r\n\r\nconst {SubMenu} = Menu\r\n\r\nconst {  Sider } = Layout;\r\n\r\nexport default function Sidemenu({click, color, collapsed }) {\r\n\r\nconst {pathname} = useLocation()\r\n\r\n\r\n\r\n\r\n    return (\r\n   <SideMenuWrap color={color}>\r\n             <Sider trigger={null} collapsible collapsed={collapsed}>\r\n          <div className=\"py-sm-5 py-2\">\r\n\r\n{/* <img className=\"mx-auto d-block\" src={color?darklogo: whitelogo} alt=\"alt\" width=\"170px\"/> */}\r\n            </div>\r\n\r\n\r\n\r\n          <Menu\r\n           theme={color? 'dark' : 'light'}\r\n           mode=\"inline\"\r\n           defaultSelectedKeys={[pathname]}\r\n           className=\"menu\"\r\n          >\r\n           \r\n          <Menu.Item key=\"/dashboard\" icon={<AppstoreFilled />} >\r\n           <Link to=\"/dashboard\">Dashboard</Link> \r\n            </Menu.Item>\r\n\r\n     <SubMenu  key=\"/dashboard/clients\" icon={<UsergroupAddOutlined />} title=\"Client\">\r\n \r\n        <Menu.Item key=\"/dashboard/clients\"  >\r\n         <Link to=\"/dashboard/clients\">Client List</Link> </Menu.Item>\r\n        <Menu.Item key=\"/dashboard/create-client\" >\r\n        <Link to=\"/dashboard/create-client\">Create Client</Link> \r\n          </Menu.Item>\r\n\r\n        </SubMenu>\r\n\r\n\r\n        \r\n     <SubMenu  key=\"/dashboard/employee\" icon={<UserOutlined />} title=\"Employee\">\r\n \r\n <Menu.Item key=\"/dashboard/employee\"  >\r\n  <Link to=\"/dashboard/employee\">Employee List</Link> </Menu.Item>\r\n <Menu.Item key=\"/dashboard/create-employee\" >\r\n <Link to=\"/dashboard/create-employee\">Create Employee</Link> \r\n   </Menu.Item>\r\n\r\n </SubMenu>\r\n\r\n\r\n        \r\n         \r\n\r\n          </Menu>\r\n          <div className=\"mode\">\r\n         <Switch checkedChildren=\"Dark\" unCheckedChildren=\"Light\" onChange={()=>click()} />\r\n          </div>\r\n        </Sider>\r\n        </SideMenuWrap>\r\n      \r\n    )\r\n}\r\n\r\n\r\nconst SideMenuWrap = styled.div`\r\n\r\n\r\n\r\n.menu{\r\n\r\n\r\nfont-size:1rem;\r\nsvg{\r\n\r\n  font-size:1.1rem;\r\n  transform:translate(-5px, -2px);\r\n}\r\n\r\n}\r\n\r\n/* .ant-menu-item .ant-menu-item-selected span.anticon.anticon-snippets  svg {\r\n  color: white !important;\r\n} */\r\n\r\n.mode{\r\n\r\nposition:absolute;\r\nbottom:5%;\r\nleft:10%;\r\n\r\n.ant-switch{\r\n\r\n  background-color:${props=>props.color? \"grey\":\"var(--brandColor)\"};\r\n}\r\n}\r\n\r\n\r\n`\r\n\r\n    {/* <SubMenu  key=\"sub1\" icon={<UserOutlined/>} title=\"Vouchers\">\r\n \r\n           <Menu.Item key=\"2\" >All vouchers</Menu.Item>\r\n           <Menu.Item key=\"3\" >Add new voucher</Menu.Item>\r\n\r\n         </SubMenu> */}\r\n\r\n    ","E:\\RealEstate_REST_API\\client\\src\\components\\auth\\privateRoute.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\shared\\dropdown.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\index.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\createclient.js",["135","136","137"],"import React from 'react'\r\nimport { Form, Input, Button, Select, Radio, Space } from 'antd';\r\nimport {clientSelector, createClient} from '../../../api/clientSlice'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\nconst phoneMsg = [\"home\", \"work\", \"main\", \"other\"]\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 4,\r\n    },\r\n    wrapperCol: {\r\n      span: 10,\r\n    },\r\n  };\r\n\r\n\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 4,\r\n      span: 10,\r\n    },\r\n  };\r\n\r\n\r\n  const tail2Layout = {\r\n    wrapperCol: {\r\n      offset: 3,\r\n      span: 10,\r\n    },\r\n  };\r\n\r\n  const tail3Layout = {\r\n    wrapperCol: {\r\n      offset: 2,\r\n      span: 10,\r\n    },\r\n  };\r\nexport default function Createclient() {\r\n\r\n    const [form] = Form.useForm();\r\n const dispatch = useDispatch()\r\n//  const {loadnig} = useSelector()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        dispatch(createClient(values))\r\n        form.resetFields()\r\n      };\r\n\r\n\r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n\r\n\r\n      const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n          <Select\r\n            style={{\r\n              width: 70,\r\n            }}\r\n          >\r\n            <Option value=\"91\">+91</Option>\r\n            <Option value=\"1\">+1</Option>\r\n\r\n            <Option value=\"87\">+87</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n\r\n    return (\r\n        <div>\r\n                <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      form={form}\r\n      initialValues={{\r\n        remember: true\r\n\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"client_name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item   \r\n       name=\"phone_number\"\r\n       label=\"Phone\"\r\n       rules={[\r\n         {\r\n           required: true,\r\n           message: 'Please input your phone number!',\r\n         },\r\n       ]}\r\n     >\r\n       <Input\r\n          addonBefore=\"+91\"\r\n          style={{\r\n           width: '100%',\r\n         }}\r\n       />\r\n     </Form.Item>\r\n\r\n <Form.Item    {...tail2Layout}> \r\n      <Form.List name=\"other_phone\" >\r\n        {(fields, { add, remove }) => (\r\n          <>\r\n\r\n      {fields.map(field => (\r\n              <Space key={field.key}   style={{width:\"100%\"}}  align=\"baseline\">\r\n              \r\n                <Form.Item\r\n                \r\n                style={{width:\"100%\"}}\r\n                 {...field}\r\n                 fieldKey={[field.fieldKey, 'phone_number2']}\r\n               \r\n        name={field.name }\r\n        label={ field.name > 3 ? `other${field.name}` :  phoneMsg[field.name]   }\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your phone number!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          addonBefore=\"+91\"\r\n         \r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n             \r\n                <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n              </Space>\r\n            ))}\r\n        <Form.Item {...tail3Layout}>\r\n              <Button type=\"dashed\" className=\"ml-2\"   onClick={() => add()} block icon={<PlusOutlined />}>\r\n                Add field\r\n              </Button>\r\n            </Form.Item>\r\n\r\n            </>\r\n        )}\r\n      </Form.List>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Address\"\r\n        name=\"address\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <TextArea rows={3} />\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"customer_type\" label=\"Customer_type\" rules={[{ required: true }]}>\r\n        <Select\r\n          placeholder=\"Select Customer type\"\r\n          allowClear\r\n        >\r\n          <Option value=\"male\">Seller</Option>\r\n          <Option value=\"female\">Buyer</Option>\r\n     \r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"location\">\r\n        <Input.Group compact>\r\n\r\n        <Form.Item\r\n            name={['location', 'district']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '40%' }} placeholder=\"district\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['location', 'state']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '40%', marginLeft:\"1rem\" }} placeholder=\"state\" />\r\n          </Form.Item>\r\n        </Input.Group>\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item label=\"Property Size\">\r\n        <Input.Group compact>\r\n\r\n        <Form.Item\r\n            name={['property_size', 'sqft']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%' }} placeholder=\"sqft\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['property_size', 'cm']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginLeft:\"1rem\" }} placeholder=\"cm\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['property_size', 'feet']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginLeft:\"1rem\" }} placeholder=\"feet\" />\r\n          </Form.Item>\r\n\r\n        </Input.Group>\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item name=\"isFurnist\" label=\"furnist\">\r\n        <Radio.Group>\r\n          <Radio value=\"furnista\">furnist</Radio>\r\n          <Radio value=\"non-furnist\">non-furnist</Radio>\r\n        \r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n        </div>\r\n    )\r\n}\r\n","E:\\RealEstate_REST_API\\client\\src\\api\\clientSlice.js",["138"],"import {createSlice} from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\nimport { message } from 'antd';\r\nimport keyUri from '../key'\r\n\r\n\r\n\r\n\r\nexport const initialState = {\r\n\r\n    loading:false,\r\n    hasErrors:false,\r\n\r\n   client:[],\r\n   current_client:null\r\n\r\n\r\n}\r\n\r\nexport const clientSlice = createSlice({\r\n\r\n\r\n    name:\"client\",\r\n    initialState,\r\n    reducers:{\r\n\r\n      getClient:state =>{\r\n\r\n        state.loading = true;\r\n      },\r\n\r\n      getClientSuccess: (state, { payload }) =>{\r\n\r\n        state.loading = false;\r\n        state.client  =  payload;\r\n\r\n        \r\n\r\n      },\r\n\r\n      getClientError: state =>{\r\n\r\n        state.hasErrors = true;\r\n     \r\n\r\n      },\r\n\r\n      getCurrentClient: (state, { payload }) =>{\r\n\r\n        state.loading = false;\r\n     state.current_client = payload;\r\n\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n})\r\n\r\n\r\nexport const {getClient, getCurrentClient,  getClientSuccess, getClientError }  = clientSlice.actions\r\n\r\nexport const clientSelector = state => state.client\r\nexport default clientSlice.reducer\r\n\r\n\r\nconst config = {\r\n    headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n  };\r\n\r\n\r\n  export const fetchAllClients = (values) => async dispatch =>{\r\n    const key = 'login';\r\n    dispatch(getClient())\r\n\r\n\r\n    try {\r\n        \r\n        const {data} = await axios.get(keyUri + '/api/client')\r\n    \r\n        dispatch(getClientSuccess(data))\r\n\r\n    } catch (error) {\r\n\r\ndispatch(getClientError())\r\nsetTimeout(() => {\r\n\r\n    // message.error({ content: error.response.data.msg, key, duration: 2 });\r\n  }, 100) \r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const createClient = (values) => async dispatch =>{\r\n    const key = 'login';\r\n    dispatch(getClient())\r\n    message.loading({ content: 'loading...', key })\r\n\r\n    try {\r\n        \r\n        const {data} = await axios.post(keyUri + '/api/client', values, config)\r\n    \r\n        data &&  message.success({ content: data.msg, key, duration: 2 });\r\n\r\n        dispatch(fetchAllClients())\r\n\r\n    } catch (error) {\r\n\r\ndispatch(getClientError())\r\nsetTimeout(() => {\r\n\r\n    message.error({ content: error.response.data.msg, key, duration: 2 });\r\n  }, 100) \r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const editClient = (id, values) => async dispatch =>{\r\n  const key = 'update';\r\n  dispatch(getClient())\r\n  message.loading({ content: 'loading...', key })\r\nconsole.log(id);\r\n  try {\r\n      \r\n      const {data} = await axios.put(keyUri + `/api/client/${id}`, values, config)\r\n  \r\n      data &&  message.success({ content: data.msg, key, duration: 2 });\r\n\r\n      dispatch(fetchAllClients())\r\n\r\n  } catch (error) {\r\n\r\ndispatch(getClientError())\r\nsetTimeout(() => {\r\n\r\n  message.error({ content: error.response.data.msg, key, duration: 2 });\r\n}, 100) \r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport const fetchOneClient = (id) => async dispatch =>{\r\n  const key = 'update';\r\n  dispatch(getClient())\r\n  \r\n\r\n  try {\r\n      \r\n      const {data} = await axios.get(keyUri + `/api/client/${id}`)\r\n     \r\n      dispatch(getCurrentClient(data))\r\n\r\n  } catch (error) {\r\n\r\ndispatch(getClientError())\r\nsetTimeout(() => {\r\n\r\n  message.error({ content: error.response.data.msg, key, duration: 2 });\r\n}, 100) \r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const deleteClient = (id) => async dispatch =>{\r\n  const key = 'login';\r\n  dispatch(getClient())\r\n  message.loading({ content: 'loading...', key })\r\n\r\n  try {\r\n      \r\n      const {data} = await axios.delete(keyUri + `/api/client/${id}`)\r\n  \r\n      data &&  message.success({ content: data.msg, key, duration: 2 });\r\n\r\n      dispatch(fetchAllClients())\r\n\r\n  } catch (error) {\r\n\r\ndispatch(getClientError())\r\nsetTimeout(() => {\r\n\r\n  message.error({ content: error.response.data.msg, key, duration: 2 });\r\n}, 100) \r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n\r\nexport const deleteManyClient = (values) => async dispatch =>{\r\n\r\n  console.log(values);\r\n  const key = 'delete';\r\n  dispatch(getClient())\r\n  message.loading({ content: 'loading...', key })\r\n\r\n  try {\r\n      \r\n      const {data} = await axios.post(keyUri + `/api/client-many`, values, config )\r\n  \r\n      data &&  message.success({ content: data.msg, key, duration: 2 });\r\n\r\n      dispatch(fetchAllClients())\r\n\r\n  } catch (error) {\r\n\r\ndispatch(getClientError())\r\nsetTimeout(() => {\r\n\r\n  message.error({ content: error.response.data.msg, key, duration: 2 });\r\n}, 100) \r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\spin.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\datatable.js",["139","140"],"import React, {useState, useEffect} from 'react'\r\nimport {Table, Space} from 'antd'\r\nimport {FaRegEdit,  FaRegTrashAlt, FaTrashAlt} from 'react-icons/fa'\r\nimport {AiOutlineClose} from 'react-icons/ai'\r\n\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport { deleteClient, deleteManyClient} from '../../../api/clientSlice'\r\nimport {useDispatch} from 'react-redux'\r\n// import moment from 'moment'\r\nimport DeleteConfirm from '../../shared/deleteConfirm'\r\nimport ExcelBtn from '../../shared/exportExcel'\r\nimport Search from '../../shared/search'\r\nimport styled from 'styled-components'\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function Datatable({data}) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [selectionType, setSelectionType] = useState('checkbox');\r\n    const [selectionKey, setSelectionKey] = useState([]);\r\n\r\n\r\n\r\n    const confirm = (e, id) => {\r\n        dispatch(deleteClient(id._id))\r\n       \r\n      }\r\n      \r\n      const cancel = (e) =>{\r\n        return null\r\n      }\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: 'client Name',\r\n          dataIndex: 'client_name',\r\n          key: 'client_name',\r\n          sorter: (a, b) => a.client_name.length - b.client_name.length,\r\n          sortDirections: ['descend', 'ascend'],\r\n        },\r\n        {\r\n          title: 'phone Number',\r\n          dataIndex: 'phone_number',\r\n          key: 'phone_number',\r\n        },\r\n        {\r\n          title: 'email',\r\n          dataIndex: 'email',\r\n          key: 'email',\r\n        },\r\n        {\r\n            title: 'customer_type',\r\n            dataIndex: 'customer_type',\r\n            key: 'customer_type',\r\n          },\r\n          {\r\n            title: 'Furnist',\r\n            dataIndex: 'isFurnist',\r\n            filters: [\r\n              {\r\n                text: 'furnist',\r\n                value: true,\r\n              },\r\n              {\r\n                text: 'non-furnist',\r\n                value: false,\r\n              }\r\n            ],\r\n\r\n\r\n            onFilter: (value, record) => {\r\n\r\n            return  record.isFurnist === value\r\n            },\r\n           render:(record)=>{\r\n\r\n            return  <p className=\"mb-0\" style={{color:record?\"green\" : \"blue\"}}>{record? \"Furnist\" : \"Non-Furnist\"}</p>\r\n\r\n           }\r\n          },\r\n          {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (id) => {\r\n  \r\n  \r\n            return  <Space size=\"middle\" align=\"center\">\r\n                \r\n                <h5 className=\"text-dark\">\r\n                 <Link to={`/dashboard/client/${id._id}`}>\r\n                  <FaRegEdit/> \r\n                   </Link> \r\n                  \r\n                  \r\n                  </h5>\r\n              <h5>\r\n                  <DeleteConfirm confirm={(e)=>confirm(e, id)} title=\"blog\" cancel={cancel} >\r\n                      <FaRegTrashAlt   style={{cursor:\"pointer\", color:\"red\"}} />\r\n                  </DeleteConfirm>\r\n              </h5>\r\n  \r\n              </Space>\r\n          },\r\n          },\r\n      ];\r\n\r\n\r\n      const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => {\r\n\r\n\r\n          setSelectionKey(selectedRowKeys)\r\n          console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n        },\r\n        getCheckboxProps: (record) => ({\r\n          disabled: record.name === 'Disabled User',\r\n          // Column configuration not to be checked\r\n          name: record.name,\r\n        }),\r\n      };\r\n\r\n      const variants = {\r\n        open: { opacity: 1, y: 0 },\r\n        closed: { opacity: 0, y: \"3.5rem\" },\r\n      }\r\n\r\n    return (\r\n        <DataTableWrap>\r\n          <div className=\" flex justify-between\">\r\n            <Search title=\"client\"/>\r\n            <ExcelBtn dataSource={data} columns={columns}/>\r\n        </div>\r\n\r\n        <motion.div\r\n          animate={selectionKey.length>0 ? \"open\" : \"closed\"}\r\n          variants={variants}\r\n          // transition={{ duration: 0.2 }}\r\n        id=\"deleteItems\" className=\"flex  justify-between px-4 multidelete items-center \">\r\n\r\n          <div className=\"flex justify-around\" style={{color:\"rgb(17 99 73)\"}}>\r\n            <AiOutlineClose onClick={()=>setSelectionKey([])} className=\"mt-1 cursor-pointer\"/>\r\n            &nbsp; &nbsp;{selectionKey.length}  selected</div>\r\n\r\n          <div className=\"flex justify-around \" style={{color:\"#f44336\"}}>\r\n            <FaTrashAlt onClick={()=>dispatch(deleteManyClient(selectionKey))} className=\"mt-1 cursor-pointer\"/>  &nbsp; delete</div>\r\n        </motion.div>\r\n         \r\n            <Table \r\n      rowSelection={{\r\n        type: selectionType,\r\n        ...rowSelection,\r\n      }}         \r\n      \r\n      rowKey={record=>record._id}\r\n             dataSource={data} \r\n             columns={columns} />\r\n        </DataTableWrap>\r\n    )\r\n}\r\n\r\n\r\nconst DataTableWrap = styled.div`\r\n\r\nposition:relative;\r\n.multidelete{\r\n\r\n  position:absolute;\r\n  top:0%;\r\n  left:0%;\r\n  transform:translate(-50%, -50%);\r\n  width:100%;\r\n  height:3.5rem;\r\n background-color:#d8f1e9;\r\nfont-size:1rem;\r\n\r\n}\r\n\r\n\r\n\r\n`","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\deleteConfirm.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\editClient.js",["141","142"],"import React, { useEffect } from 'react'\r\nimport { Form, Input, Button, Select, Radio } from 'antd';\r\nimport {clientSelector, fetchOneClient, editClient} from '../../../api/clientSlice'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useParams} from 'react-router-dom'\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 3,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 3,\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n\r\nexport default function Createclient() {\r\n\r\n    const [form] = Form.useForm();\r\n const dispatch = useDispatch()\r\n const {loadnig, current_client} = useSelector(clientSelector)\r\n\r\nconst { id } = useParams()\r\n\r\nuseEffect(()=>{\r\n\r\n    dispatch(fetchOneClient(id))\r\n\r\n    current_client &&   form.setFieldsValue({\r\n        client_name: current_client.client_name,\r\n        phone_number: current_client.phone_number,\r\n        email: current_client.email,\r\n        address: current_client.address,\r\n        customer_type: current_client.customer_type,\r\n\r\n        location: {\r\n            district:current_client.location.district,\r\n            state:current_client.location.state\r\n        },\r\n        \r\n        property_size:{\r\n\r\n            sqft:current_client.property_size.sqft,\r\n           cm:current_client.property_size.cm,\r\n           feet:current_client.property_size.feet,\r\n\r\n        },\r\n        // isFurnist: current_client && current_client.isFurnist? true : false\r\n    \r\n\r\n      });\r\n\r\n\r\n}, [dispatch])\r\n\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Success:', values);\r\n\r\n\r\n        dispatch(editClient(id, values))\r\n        form.resetFields()\r\n      };\r\n\r\n\r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n\r\n\r\n      const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n          <Select\r\n            style={{\r\n              width: 70,\r\n            }}\r\n          >\r\n            <Option value=\"91\">+91</Option>\r\n            <Option value=\"1\">+1</Option>\r\n\r\n            <Option value=\"87\">+87</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n\r\n    return (\r\n        <div>\r\n          \r\n          { current_client &&       <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      form={form}\r\n      initialValues={{\r\n        remember: true,\r\n        prefix: '91',\r\n\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"client_name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"phone_number\"\r\n        label=\"Phone\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your phone number!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          addonBefore={prefixSelector}\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item\r\n        label=\"Address\"\r\n        name=\"address\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <TextArea rows={3} />\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"customer_type\" label=\"Customer_type\" rules={[{ required: true }]}>\r\n        <Select\r\n          placeholder=\"Select Customer type\"\r\n          allowClear\r\n        >\r\n          <Option value=\"male\">Seller</Option>\r\n          <Option value=\"female\">Buyer</Option>\r\n     \r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"location\">\r\n        <Input.Group compact>\r\n\r\n        <Form.Item\r\n            name={['location', 'district']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '40%' }} placeholder=\"district\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['location', 'state']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '40%', marginLeft:\"1rem\" }} placeholder=\"state\" />\r\n          </Form.Item>\r\n        </Input.Group>\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item label=\"Property Size\">\r\n        <Input.Group compact>\r\n\r\n        <Form.Item\r\n            name={['property_size', 'sqft']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%' }} placeholder=\"sqft\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['property_size', 'cm']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginLeft:\"1rem\" }} placeholder=\"cm\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['property_size', 'feet']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginLeft:\"1rem\" }} placeholder=\"feet\" />\r\n          </Form.Item>\r\n\r\n        </Input.Group>\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item name=\"isFurnist\"\r\n      label=\"furnist\">\r\n        <Radio.Group>\r\n          <Radio checked={current_client && current_client.isFurnist? true : false} value={true}>furnist</Radio>\r\n          <Radio checked={current_client && current_client.isFurnist? true : false} value={false}>non-furnist</Radio>\r\n        \r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n}\r\n        </div>\r\n    )\r\n}\r\n","E:\\RealEstate_REST_API\\client\\src\\api\\empSlice.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\employees\\createEmployee.js",["143","144","145","146","147"],"E:\\RealEstate_REST_API\\client\\src\\components\\shared\\search.js",["148"],"import React from 'react'\r\nimport { Input } from 'antd';\r\nimport axios from 'axios'\r\nimport {fethFilter} from '../../api/authSlice'\r\nimport {useDispatch} from 'react-redux'\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components'\r\n// const { Search } = Input;\r\n\r\n\r\n\r\nexport default function SearchComponent({title}) {\r\n\r\n const dispatch = useDispatch()\r\n    const onSearch = (e) => {\r\n\r\n        dispatch(fethFilter(title, e.target.value ))\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <SearchWrap >\r\n             <Input className=\"px-4 py-2 focus:outline-none\"\r\n            suffix={  <SearchOutlined />\r\n            }\r\n             placeholder=\"input search text\" onChange={onSearch}  />\r\n        </SearchWrap>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst SearchWrap = styled.div`\r\n\r\n\r\nwidth:20%;\r\ntransition:0.3s ease-in-out;\r\n\r\n\r\n\r\n\r\n.ant-input-affix-wrapper > input.ant-input {\r\n\r\n\r\n\r\n\r\nbox-shadow: none !important;\r\n&:focus{\r\n\r\n    border-color:white !important;\r\n}\r\n&:hover{\r\n\r\n    border-color:white !important;\r\n}\r\n}\r\n`","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\exportExcel.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\employees\\index.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\employees\\datatable.js",["149","150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":1,"column":16,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"160","line":15,"column":27,"nodeType":"161","endLine":15,"endColumn":49},{"ruleId":"155","severity":1,"message":"162","line":2,"column":40,"nodeType":"157","messageId":"158","endLine":2,"endColumn":48},{"ruleId":"155","severity":1,"message":"163","line":6,"column":9,"nodeType":"157","messageId":"158","endLine":6,"endColumn":19},{"ruleId":"155","severity":1,"message":"164","line":13,"column":8,"nodeType":"157","messageId":"158","endLine":13,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":23,"column":4,"nodeType":"167","endLine":23,"endColumn":20,"suggestions":"168"},{"ruleId":"155","severity":1,"message":"163","line":6,"column":26,"nodeType":"157","messageId":"158","endLine":6,"endColumn":36},{"ruleId":"165","severity":1,"message":"169","line":47,"column":4,"nodeType":"167","endLine":47,"endColumn":40,"suggestions":"170"},{"ruleId":"155","severity":1,"message":"156","line":1,"column":16,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"171","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":35},{"ruleId":"155","severity":1,"message":"172","line":2,"column":30,"nodeType":"157","messageId":"158","endLine":2,"endColumn":44},{"ruleId":"155","severity":1,"message":"173","line":3,"column":19,"nodeType":"157","messageId":"158","endLine":3,"endColumn":24},{"ruleId":"155","severity":1,"message":"174","line":5,"column":9,"nodeType":"157","messageId":"158","endLine":5,"endColumn":24},{"ruleId":"155","severity":1,"message":"175","line":6,"column":9,"nodeType":"157","messageId":"158","endLine":6,"endColumn":21},{"ruleId":"155","severity":1,"message":"176","line":7,"column":8,"nodeType":"157","messageId":"158","endLine":7,"endColumn":16},{"ruleId":"155","severity":1,"message":"177","line":8,"column":9,"nodeType":"157","messageId":"158","endLine":8,"endColumn":29},{"ruleId":"155","severity":1,"message":"178","line":9,"column":9,"nodeType":"157","messageId":"158","endLine":9,"endColumn":20},{"ruleId":"155","severity":1,"message":"179","line":10,"column":9,"nodeType":"157","messageId":"158","endLine":10,"endColumn":13},{"ruleId":"155","severity":1,"message":"180","line":15,"column":7,"nodeType":"157","messageId":"158","endLine":15,"endColumn":15},{"ruleId":"155","severity":1,"message":"177","line":5,"column":9,"nodeType":"157","messageId":"158","endLine":5,"endColumn":29},{"ruleId":"155","severity":1,"message":"178","line":6,"column":9,"nodeType":"157","messageId":"158","endLine":6,"endColumn":20},{"ruleId":"155","severity":1,"message":"181","line":8,"column":3,"nodeType":"157","messageId":"158","endLine":8,"endColumn":19},{"ruleId":"155","severity":1,"message":"182","line":9,"column":3,"nodeType":"157","messageId":"158","endLine":9,"endColumn":23},{"ruleId":"155","severity":1,"message":"183","line":10,"column":5,"nodeType":"157","messageId":"158","endLine":10,"endColumn":17},{"ruleId":"184","severity":1,"message":"185","line":120,"column":5,"nodeType":"186","messageId":"187","endLine":125,"endColumn":24},{"ruleId":"155","severity":1,"message":"188","line":3,"column":9,"nodeType":"157","messageId":"158","endLine":3,"endColumn":23},{"ruleId":"155","severity":1,"message":"178","line":4,"column":22,"nodeType":"157","messageId":"158","endLine":4,"endColumn":33},{"ruleId":"155","severity":1,"message":"189","line":64,"column":13,"nodeType":"157","messageId":"158","endLine":64,"endColumn":27},{"ruleId":"155","severity":1,"message":"190","line":77,"column":11,"nodeType":"157","messageId":"158","endLine":77,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":1,"column":26,"nodeType":"157","messageId":"158","endLine":1,"endColumn":35},{"ruleId":"155","severity":1,"message":"191","line":21,"column":27,"nodeType":"157","messageId":"158","endLine":21,"endColumn":43},{"ruleId":"155","severity":1,"message":"192","line":33,"column":9,"nodeType":"157","messageId":"158","endLine":33,"endColumn":16},{"ruleId":"165","severity":1,"message":"193","line":66,"column":4,"nodeType":"167","endLine":66,"endColumn":14,"suggestions":"194"},{"ruleId":"155","severity":1,"message":"195","line":2,"column":23,"nodeType":"157","messageId":"158","endLine":2,"endColumn":29},{"ruleId":"155","severity":1,"message":"196","line":2,"column":47,"nodeType":"157","messageId":"158","endLine":2,"endColumn":52},{"ruleId":"155","severity":1,"message":"197","line":3,"column":9,"nodeType":"157","messageId":"158","endLine":3,"endColumn":25},{"ruleId":"155","severity":1,"message":"178","line":4,"column":22,"nodeType":"157","messageId":"158","endLine":4,"endColumn":33},{"ruleId":"155","severity":1,"message":"198","line":5,"column":8,"nodeType":"157","messageId":"158","endLine":5,"endColumn":14},{"ruleId":"155","severity":1,"message":"199","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":1,"column":26,"nodeType":"157","messageId":"158","endLine":1,"endColumn":35},{"ruleId":"155","severity":1,"message":"191","line":21,"column":27,"nodeType":"157","messageId":"158","endLine":21,"endColumn":43},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Checkbox' is defined but never used.","'useHistory' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["202"],"React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["203"],"'useState' is defined but never used.","'LogoutOutlined' is defined but never used.","'Badge' is defined but never used.","'MdNotifications' is defined but never used.","'UserOutlined' is defined but never used.","'Dropdown' is defined but never used.","'authenticateSelector' is defined but never used.","'useSelector' is defined but never used.","'Link' is defined but never used.","'dispatch' is assigned a value but never used.","'SnippetsOutlined' is defined but never used.","'QuestionCircleFilled' is defined but never used.","'FormOutlined' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'clientSelector' is defined but never used.","'prefixSelector' is assigned a value but never used.","'key' is assigned a value but never used.","'setSelectionType' is assigned a value but never used.","'loadnig' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'current_client', 'form', and 'id'. Either include them or remove the dependency array.",["204"],"'Upload' is defined but never used.","'Radio' is defined but never used.","'employeeSelector' is defined but never used.","'keyUri' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [history, isAuthenticate]",{"range":"211","text":"212"},"Update the dependencies array to be: [dispatch, isAuthenticate, history, location.pathname]",{"range":"213","text":"214"},"Update the dependencies array to be: [current_client, dispatch, form, id]",{"range":"215","text":"216"},[705,721],"[history, isAuthenticate]",[1162,1198],"[dispatch, isAuthenticate, history, location.pathname]",[1554,1564],"[current_client, dispatch, form, id]"]