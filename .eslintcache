[{"E:\\RealEstate_REST_API\\client\\src\\index.js":"1","E:\\RealEstate_REST_API\\client\\src\\App.js":"2","E:\\RealEstate_REST_API\\client\\src\\api\\index.js":"3","E:\\RealEstate_REST_API\\client\\src\\api\\authSlice.js":"4","E:\\RealEstate_REST_API\\client\\src\\components\\auth\\login.js":"5","E:\\RealEstate_REST_API\\client\\src\\key.js":"6","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\index.js":"7","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\header.js":"8","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\sidebar.js":"9","E:\\RealEstate_REST_API\\client\\src\\components\\auth\\privateRoute.js":"10","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\dropdown.js":"11","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\index.js":"12","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\createclient.js":"13","E:\\RealEstate_REST_API\\client\\src\\api\\clientSlice.js":"14","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\spin.js":"15","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\datatable.js":"16","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\deleteConfirm.js":"17","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\editClient.js":"18","E:\\RealEstate_REST_API\\client\\src\\api\\empSlice.js":"19","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\employees\\createEmployee.js":"20","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\search.js":"21","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\exportExcel.js":"22","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\employees\\index.js":"23","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\employees\\datatable.js":"24","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\properties\\createProperty.js":"25","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\properties\\datatable.js":"26","E:\\RealEstate_REST_API\\client\\src\\api\\PropertySlice.js":"27","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\properties\\index.js":"28","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\properties\\propertytab.js":"29","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\filter\\selectSearch.js":"30","E:\\RealEstate_REST_API\\client\\src\\api\\propertySettings.js":"31","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\settings\\intialSetting.js":"32","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\settings\\adminSetting.js":"33","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\properties\\editProperty.js":"34"},{"size":545,"mtime":1610770099538,"results":"35","hashOfConfig":"36"},{"size":688,"mtime":1611378956156,"results":"37","hashOfConfig":"36"},{"size":478,"mtime":1612023788167,"results":"38","hashOfConfig":"36"},{"size":2706,"mtime":1611991074732,"results":"39","hashOfConfig":"36"},{"size":2970,"mtime":1610804709347,"results":"40","hashOfConfig":"36"},{"size":145,"mtime":1616429336747,"results":"41","hashOfConfig":"36"},{"size":3732,"mtime":1617553345401,"results":"42","hashOfConfig":"36"},{"size":2533,"mtime":1617430434234,"results":"43","hashOfConfig":"36"},{"size":3679,"mtime":1616220248159,"results":"44","hashOfConfig":"36"},{"size":576,"mtime":1610634363485,"results":"45","hashOfConfig":"36"},{"size":943,"mtime":1610635297971,"results":"46","hashOfConfig":"36"},{"size":764,"mtime":1617428710004,"results":"47","hashOfConfig":"36"},{"size":9206,"mtime":1617433185919,"results":"48","hashOfConfig":"36"},{"size":4361,"mtime":1617430277128,"results":"49","hashOfConfig":"36"},{"size":527,"mtime":1610617969775,"results":"50","hashOfConfig":"36"},{"size":5812,"mtime":1617434016430,"results":"51","hashOfConfig":"36"},{"size":417,"mtime":1610617969713,"results":"52","hashOfConfig":"36"},{"size":10561,"mtime":1617550247074,"results":"53","hashOfConfig":"36"},{"size":4466,"mtime":1611026523432,"results":"54","hashOfConfig":"36"},{"size":5891,"mtime":1611385178212,"results":"55","hashOfConfig":"36"},{"size":1033,"mtime":1610891669053,"results":"56","hashOfConfig":"36"},{"size":820,"mtime":1610891411295,"results":"57","hashOfConfig":"36"},{"size":784,"mtime":1611026369928,"results":"58","hashOfConfig":"36"},{"size":4338,"mtime":1611026689064,"results":"59","hashOfConfig":"36"},{"size":28748,"mtime":1617434606922,"results":"60","hashOfConfig":"36"},{"size":5373,"mtime":1617435443037,"results":"61","hashOfConfig":"36"},{"size":6296,"mtime":1616935577681,"results":"62","hashOfConfig":"36"},{"size":810,"mtime":1611393940243,"results":"63","hashOfConfig":"36"},{"size":17980,"mtime":1616934077703,"results":"64","hashOfConfig":"36"},{"size":1805,"mtime":1616935619693,"results":"65","hashOfConfig":"36"},{"size":2908,"mtime":1617432302455,"results":"66","hashOfConfig":"36"},{"size":191,"mtime":1615996125667,"results":"67","hashOfConfig":"36"},{"size":1322,"mtime":1616220058088,"results":"68","hashOfConfig":"36"},{"size":32404,"mtime":1617637407674,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"53ftp6",{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"72"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"72"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\RealEstate_REST_API\\client\\src\\index.js",[],["157","158"],"E:\\RealEstate_REST_API\\client\\src\\App.js",["159","160"],"import React, {useEffect} from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import Home from './components/Clientview/home'\nimport Dashboard from './components/pages'\n// import { useSelector } from 'react-redux'\n// import {layoutSelector} from './components/Api/layoutSlice'\nimport Login from './components/auth/login'\nimport PrivateRoute from './components/auth/privateRoute'\nimport './App.less';\n\nfunction App() {\n\n  return (\n    <Router>\n    <main className=\"App\" className=\" font-text\">\n<PrivateRoute path=\"/dashboard\" component={Dashboard} />\n <Route path=\"/\" component={Login} exact/> \n\n    </main>\n  \n    </Router> \n  \n  );\n}\n\nexport default App;\n","E:\\RealEstate_REST_API\\client\\src\\api\\index.js",[],"E:\\RealEstate_REST_API\\client\\src\\api\\authSlice.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\auth\\login.js",["161","162","163","164"],"import React, {useEffect} from 'react'\r\nimport { Form, Input,Row, Col, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {fetchlogin, authenticateSelector} from '../../api/authSlice'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {useHistory} from 'react-router-dom'\r\nimport adminImg from '../../images/admin.jpg'\r\nimport styled from 'styled-components'\r\nexport default function Login({history}) {\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst {loading, isAuthenticate } = useSelector(authenticateSelector)\r\n// const {history} = useHistory()\r\n\r\nuseEffect(()=>{\r\n\r\nif(isAuthenticate){\r\n\r\n  return  history.push('/dashboard')\r\n} \r\n\r\n}, [isAuthenticate])\r\n\r\n\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n        dispatch(fetchlogin(values))\r\n      };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <LoginWrap className=\" flex items-center  justify-center h-screen\">\r\n          <div className=\"container    \">\r\n<Row>\r\n\r\n  <Col span={12}>\r\n  <img src={adminImg} width=\"80%\" className=\"mx-auto block\" alt=\"admin\"/>\r\n  </Col>\r\n  <Col span={12} className=\"logform\">\r\n     \r\n     <div  className=\"login-form \">\r\n     <hr className=\"border-none h-1 bg-green-500 w-14 mb-2\"/>\r\n     <h3 className=\"text-3xl mb-8 font-sans text-green-700\">Admin Login</h3>\r\n\r\n         <Form\r\n      name=\"normal_login\"\r\n    \r\n      style={{width:\"450px\"}}\r\n      initialValues={{\r\n        remember: true, \r\n      }}\r\n      onFinish={onFinish}\r\n    >\r\n      <Form.Item\r\n        name=\"email\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your Username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your Password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n      </Form.Item>\r\n  \r\n\r\n      <Form.Item className=\"border-none\">\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Log in\r\n        </Button>\r\n\r\n      </Form.Item>\r\n    </Form> \r\n    </div>\r\n    </Col>\r\n</Row>\r\n    </div>\r\n      \r\n        </LoginWrap>\r\n    )\r\n}\r\n\r\n\r\nconst LoginWrap = styled.div`\r\n\r\n.ant-input-affix-wrapper > input.ant-input {\r\n\r\n\r\n\r\n\r\nbox-shadow: none !important;\r\n&:focus{\r\n\r\n    border-color:white !important;\r\n}\r\n&:hover{\r\n\r\n    border-color:white !important;\r\n}\r\n}\r\n\r\n.logform {\r\n\r\n  position:relative;\r\n\r\n  .login-form {\r\n\r\n    position:absolute;\r\n    left:50%;\r\n    top:50%;\r\n    transform:translate(-50%, -50%);\r\n\r\n  svg {\r\n\r\n    font-size: 1.2rem !important;\r\n    color: #009c86 !important;\r\n}\r\n    \r\n  }\r\n}\r\n\r\n\r\n`","E:\\RealEstate_REST_API\\client\\src\\key.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\index.js",["165","166"],"import React, {useState, useEffect} from 'react'\r\nimport { Layout, Affix } from 'antd';\r\nimport styled from 'styled-components'\r\nimport SideBar from './sidebar'\r\nimport Header from './header'\r\nimport {  Route, Switch, useHistory, useRouteMatch } from 'react-router-dom';\r\n\r\nimport Home from '../pages/clients'\r\nimport CreateClient from '../pages/clients/createclient'\r\nimport Client from '../pages/clients'\r\nimport ClientUpdate from '../pages/clients/editClient'\r\n\r\n\r\n\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {authenticateSelector} from '../../api/authSlice'\r\nimport CreateEmployee from './employees/createEmployee';\r\nimport Employee from './employees';\r\n\r\nimport PropertyEdit from './properties/editProperty';\r\n\r\nimport Property from './properties/createProperty';\r\nimport PropertyList from './properties';\r\nimport Propertytab from './properties/propertytab';\r\nimport Setting from './settings/adminSetting';\r\n\r\n\r\n\r\n\r\nconst {  Content } = Layout;\r\n\r\n\r\nexport default function Admin({history, location}) {\r\n\r\n  let { path } = useRouteMatch();\r\n// let {history} = useHistory()\r\n    const [collapsed, setCollapsed] = useState(false)\r\n    const [theme, setTheme] = useState(true)\r\n\r\n\r\nconst dispatch = useDispatch()\r\n  const {isAuthenticate} = useSelector(authenticateSelector)\r\n  \r\nuseEffect(()=>{\r\n\r\nif (!isAuthenticate) {\r\n  history.push('/');\r\n}\r\nelse{\r\n\r\n  history.push(location.pathname);\r\n}\r\n  \r\n}, [dispatch, isAuthenticate, history ])\r\n\r\n    const  toggle = () => {\r\n\r\n        setCollapsed(!collapsed)\r\n\r\n      \r\n      };\r\n\r\n      const changeTheme = () =>{\r\n\r\n        setTheme(!theme)\r\n    \r\n    }\r\n\r\n    return (\r\n        <AdminWrap color={theme}>\r\n        <Layout>\r\n     \r\n        <Affix offsetTop={0} onChange={affixed => console.log(affixed)}>\r\n     <SideBar collapsed={collapsed} color={theme}  click={changeTheme}/>\r\n     </Affix>\r\n\r\n        <Layout className=\"site-layout\">\r\n        <Affix offsetTop={0} onChange={affixed => console.log(affixed)}>\r\n        <Header click={toggle} collapsed={collapsed}/>\r\n        </Affix>\r\n          <Content\r\n            className=\"site-layout-background\"\r\n            style={{\r\n              margin: '24px 16px',\r\n              padding: 24,\r\n              minHeight: 280,\r\n            }}\r\n          >\r\n        \r\n        <Switch>\r\n\r\n<Route  exact path={`${path}/`}  component={Home} />\r\n<Route  exact path={`${path}/create-client`}  component={CreateClient} />\r\n<Route  exact path={`${path}/clients`}  component={Client} />\r\n<Route  exact path={`${path}/client/:id`}  component={ClientUpdate} />\r\n\r\n<Route  exact path={`${path}/create-employee`}  component={CreateEmployee} />\r\n<Route  exact path={`${path}/employee`}  component={Employee} />\r\n\r\n<Route  exact path={`${path}/property`}  component={PropertyList} />\r\n<Route  exact path={`${path}/create-property`}  component={Property} />\r\n<Route  exact path={`${path}/property/:id`}  component={PropertyEdit} />\r\n\r\n<Route  exact path={`${path}/property-tab`}  component={Propertytab} />\r\n<Route  exact path={`${path}/intial-setting`}  component={Propertytab} />\r\n<Route  exact path={`${path}/admin-setting`}  component={Setting} />\r\n\r\n\r\n</Switch>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n\r\n \r\n      </AdminWrap>\r\n    )\r\n}\r\n\r\n\r\nconst AdminWrap = styled.div`\r\n\r\n\r\n.ant-layout {\r\n\r\n.ant-layout-sider{\r\n    height: 101vh;\r\n    overflow-y: auto;\r\n\r\n    background:${props => props.color ? \"#001529\" : \"#ffffff\"};\r\n}\r\n}\r\n\r\n\r\n\r\n.logo {\r\nheight: 32px;\r\nbackground: rgba(255, 255, 255, 0.2);\r\nmargin: 16px;\r\n}\r\n\r\n\r\n\r\n#components-layout-demo-custom-trigger .logo {\r\nheight: 32px;\r\nbackground: rgba(255, 255, 255, 0.2);\r\nmargin: 16px;\r\n}\r\n\r\n.site-layout .site-layout-background {\r\nbackground: #fff;\r\n}\r\n\r\n`","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\header.js",["167","168","169","170","171","172","173","174","175","176","177"],"import React, {useEffect, useState} from 'react'\r\nimport { MenuUnfoldOutlined, LogoutOutlined, MenuFoldOutlined } from '@ant-design/icons';\r\nimport { Layout,  Badge} from 'antd';\r\nimport styled from 'styled-components'\r\nimport {MdNotifications} from 'react-icons/md'\r\nimport {UserOutlined  } from '@ant-design/icons';\r\nimport Dropdown from '../shared/dropdown'\r\nimport {authenticateSelector} from '../../api/authSlice'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nconst { Header } = Layout;\r\n\r\nexport default function HeaderMenu({collapsed, click}) {\r\n\r\nconst dispatch = useDispatch()\r\n\r\n// useEffect(()=>{\r\n\r\n//   dispatch(fetchAllQtn())\r\n\r\n// }, [dispatch])\r\n\r\n\r\n// const {totalUnAnsweredQtn} = useSelector(qtnSelector)\r\n// const {user} = useSelector(authenticateSelector)\r\n\r\n\r\n\r\n\r\n    return (\r\n         <HeaderMenuWrap>\r\n        <Header className=\"site-layout-background shadow-sm\" style={{ padding: 0 }}>\r\n        <div className=\"d-flex flex-end\"> \r\n\r\n      {collapsed ?\r\n         <MenuUnfoldOutlined className=\"trigger\" onClick={()=>click()}/>\r\n          :<MenuFoldOutlined className=\"trigger\" onClick={()=>click()}/>}  \r\n\r\n\r\n {/* <div className=\"n\">\r\n<Badge size=\"small\" className=\"notification\" count={ totalUnAnsweredQtn}>\r\n   <Link to=\"/admin/experts\" style={{color:\"grey\"}}><MdNotifications style={{cursor:\"pointer\"}}/></Link> \r\n  </Badge>\r\n<span className=\"mx-3 my-auto\">\r\n  <Dropdown \r\n  username={user.curentUser.name}\r\n  userIcon={<LogoutOutlined style={{fontSize:\"1.2rem\", transform:\"translateY(-3px)\", fontWeight:\"bold\"}}/>}\r\n  icon={< UserOutlined style={{fontSize:\"1.2rem\", transform:\"translateY(-3px)\", fontWeight:\"bold\"}}/>}/> \r\n    </span>\r\n</div> */}\r\n</div>\r\n\r\n      \r\n           \r\n          </Header>\r\n\r\n     \r\n\r\n         </HeaderMenuWrap>\r\n    )\r\n}\r\n\r\nconst HeaderMenuWrap = styled.div`\r\n.n{\r\n\r\n  display:flex;\r\n  justify-content:flex-end;\r\n  line-height:64px;\r\n\r\n  width:100%;\r\n\r\n  button{\r\n\r\n    margin: auto;\r\n  }\r\n}\r\n.trigger {\r\n  font-size: 18px;\r\n  line-height: 64px;\r\n  padding: 0 24px;\r\n  cursor: pointer;\r\n  transition: color 0.3s;\r\n\r\n  &:hover{\r\n\r\n      color: var(--brandColor); \r\n  }\r\n}\r\n\r\n\r\n.ant-badge-count{\r\n\r\ntop:25px;\r\n}\r\n\r\n\r\n\r\n#components-layout-demo-custom-trigger .trigger {\r\n  font-size: 18px;\r\n  padding: 0 24px;\r\n  cursor: pointer;\r\n  transition: color 0.3s;\r\n\r\n  &:hover{\r\n\r\ncolor: var(--brandColor); \r\n}\r\n  /* &:hover{\r\n\r\n      color: #1890ff;\r\n  } */\r\n}\r\n\r\n\r\n.notification{\r\n\r\n  font-size:1.7rem;\r\n  line-height: 64px;\r\n\r\n}\r\n\r\n\r\n`\r\n","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\sidebar.js",["178","179","180","181"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Layout, Menu, Switch } from 'antd';\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport {authenticateSelector} from '../../api/authSlice'\r\nimport {useSelector} from 'react-redux'\r\nimport {\r\n  ShopOutlined,\r\n  QuestionCircleFilled,\r\n  SettingFilled,\r\n    AppstoreFilled,\r\n    UserOutlined ,\r\n    UsergroupAddOutlined\r\n  } from '@ant-design/icons';\r\n\r\nconst {SubMenu} = Menu\r\n\r\nconst {  Sider } = Layout;\r\n\r\nexport default function Sidemenu({click, color, collapsed }) {\r\n\r\nconst {pathname} = useLocation()\r\n\r\n\r\n\r\n\r\n    return (\r\n   <SideMenuWrap color={color}>\r\n             <Sider trigger={null} collapsible collapsed={collapsed}>\r\n          <div className=\"py-sm-5 py-2\">\r\n\r\n{/* <img className=\"mx-auto d-block\" src={color?darklogo: whitelogo} alt=\"alt\" width=\"170px\"/> */}\r\n            </div>\r\n\r\n\r\n\r\n          <Menu\r\n           theme={color? 'dark' : 'light'}\r\n           mode=\"inline\"\r\n           defaultSelectedKeys={[pathname]}\r\n           className=\"menu\"\r\n          >\r\n           \r\n          <Menu.Item key=\"/dashboard\" icon={<AppstoreFilled />} >\r\n           <Link to=\"/dashboard\">Dashboard</Link> \r\n            </Menu.Item>\r\n\r\n     <SubMenu  key=\"/dashboard/clients\" icon={<UsergroupAddOutlined />} title=\"Client\">\r\n \r\n        <Menu.Item key=\"/dashboard/clients\"  >\r\n         <Link to=\"/dashboard/clients\">Client List</Link> </Menu.Item>\r\n        <Menu.Item key=\"/dashboard/create-client\" >\r\n        <Link to=\"/dashboard/create-client\">Create Client</Link> \r\n          </Menu.Item>\r\n\r\n        </SubMenu>\r\n\r\n\r\n        \r\n     <SubMenu  key=\"/dashboard/employee\" icon={<UserOutlined />} title=\"Employee\">\r\n \r\n <Menu.Item key=\"/dashboard/employee\"  >\r\n  <Link to=\"/dashboard/employee\">Employee List</Link> </Menu.Item>\r\n <Menu.Item key=\"/dashboard/create-employee\" >\r\n <Link to=\"/dashboard/create-employee\">Create Employee</Link> \r\n   </Menu.Item>\r\n\r\n </SubMenu>\r\n\r\n\r\n <SubMenu  key=\"/dashboard/property\" icon={<ShopOutlined />} title=\"Property\">\r\n \r\n <Menu.Item key=\"/dashboard/property\"  >\r\n  <Link to=\"/dashboard/property\">property List</Link>\r\n  \r\n   </Menu.Item>\r\n\r\n <Menu.Item key=\"/dashboard/create-property\" >\r\n <Link to=\"/dashboard/create-property\">Create property</Link> \r\n   </Menu.Item>\r\n\r\n   <Menu.Item key=\"/dashboard/property-tab\" >\r\n <Link to=\"/dashboard/property-tab\">Filter Tab</Link> \r\n   </Menu.Item>\r\n\r\n </SubMenu>\r\n\r\n <SubMenu  key=\"/dashboard/setting\" icon={<SettingFilled />} title=\"Setting\">\r\n \r\n <Menu.Item key=\"/dashboard/admin-setting\"  >\r\n  <Link to=\"/dashboard/admin-setting\">Form Setting</Link>\r\n  \r\n   </Menu.Item>\r\n\r\n <Menu.Item key=\"/dashboard/intial-setting\" >\r\n <Link to=\"/dashboard/intial-setting\">Intial Setting</Link> \r\n   </Menu.Item>\r\n\r\n\r\n </SubMenu>\r\n\r\n\r\n        \r\n         \r\n\r\n          </Menu>\r\n          <div className=\"mode\">\r\n         <Switch checkedChildren=\"Dark\" unCheckedChildren=\"Light\" onChange={()=>click()} />\r\n          </div>\r\n        </Sider>\r\n        </SideMenuWrap>\r\n      \r\n    )\r\n}\r\n\r\n\r\nconst SideMenuWrap = styled.div`\r\n\r\n\r\n\r\n.menu{\r\n\r\n\r\nfont-size:1rem;\r\nsvg{\r\n\r\n  font-size:1.1rem;\r\n  transform:translate(-5px, -2px);\r\n}\r\n\r\n}\r\n\r\n/* .ant-menu-item .ant-menu-item-selected span.anticon.anticon-snippets  svg {\r\n  color: white !important;\r\n} */\r\n\r\n.mode{\r\n\r\nposition:absolute;\r\nbottom:5%;\r\nleft:10%;\r\n\r\n.ant-switch{\r\n\r\n  background-color:${props=>props.color? \"grey\":\"var(--brandColor)\"};\r\n}\r\n}\r\n\r\n\r\n`\r\n\r\n    {/* <SubMenu  key=\"sub1\" icon={<UserOutlined/>} title=\"Vouchers\">\r\n \r\n           <Menu.Item key=\"2\" >All vouchers</Menu.Item>\r\n           <Menu.Item key=\"3\" >Add new voucher</Menu.Item>\r\n\r\n         </SubMenu> */}\r\n\r\n    ","E:\\RealEstate_REST_API\\client\\src\\components\\auth\\privateRoute.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\shared\\dropdown.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\index.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\createclient.js",[],"E:\\RealEstate_REST_API\\client\\src\\api\\clientSlice.js",["182"],"import {createSlice} from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\nimport { message } from 'antd';\r\nimport keyUri from '../key'\r\n\r\n\r\n\r\n\r\nexport const initialState = {\r\n\r\n    loading:false,\r\n    hasErrors:false,\r\n\r\n   client:[],\r\n   current_client:null\r\n\r\n\r\n}\r\n\r\nexport const clientSlice = createSlice({\r\n\r\n\r\n    name:\"client\",\r\n    initialState,\r\n    reducers:{\r\n\r\n      getClient:state =>{\r\n\r\n        state.loading = true;\r\n      },\r\n\r\n      getClientSuccess: (state, { payload }) =>{\r\n\r\n        state.loading = false;\r\n        state.client  =  payload;\r\n\r\n        \r\n\r\n      },\r\n\r\n      getClientError: state =>{\r\n\r\n        state.hasErrors = true;\r\n     \r\n\r\n      },\r\n\r\n      getCurrentClient: (state, { payload }) =>{\r\n\r\n        state.loading = false;\r\n     state.current_client = payload;\r\n\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n})\r\n\r\n\r\nexport const {getClient, getCurrentClient,  getClientSuccess, getClientError }  = clientSlice.actions\r\n\r\nexport const clientSelector = state => state.client\r\nexport default clientSlice.reducer\r\n\r\n\r\nconst config = {\r\n    headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n  };\r\n\r\n\r\n  export const fetchAllClients = (values) => async dispatch =>{\r\n    const key = 'login';\r\n    dispatch(getClient())\r\n\r\n\r\n    try {\r\n        \r\n        const {data} = await axios.get(keyUri + '/api/client')\r\n    \r\n        dispatch(getClientSuccess(data))\r\n\r\n    } catch (error) {\r\n\r\ndispatch(getClientError())\r\nsetTimeout(() => {\r\n\r\n    // message.error({ content: error.response.data.msg, key, duration: 2 });\r\n  }, 100) \r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const createClient = (values) => async dispatch =>{\r\n    const key = 'login';\r\n    dispatch(getClient())\r\n    message.loading({ content: 'loading...', key })\r\n\r\n    try {\r\n        \r\n        const {data} = await axios.post(keyUri + '/api/client', values, config)\r\n    \r\n        data &&  message.success({ content: data.msg, key, duration: 2 });\r\n\r\n        dispatch(fetchAllClients())\r\n\r\n    } catch (error) {\r\n\r\ndispatch(getClientError())\r\nsetTimeout(() => {\r\n\r\n    message.error({ content: error.response.data.msg, key, duration: 2 });\r\n  }, 100) \r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const editClient = (id, values) => async dispatch =>{\r\n  const key = 'update';\r\n  dispatch(getClient())\r\n  message.loading({ content: 'loading...', key })\r\nconsole.log(id);\r\n  try {\r\n      \r\n      const {data} = await axios.put(keyUri + `/api/client/${id}`, values, config)\r\n  \r\n      data &&  message.success({ content: data.msg, key, duration: 2 });\r\n\r\n      dispatch(fetchAllClients())\r\n\r\n  } catch (error) {\r\n\r\ndispatch(getClientError())\r\nsetTimeout(() => {\r\n\r\n  message.error({ content: error.response.data.msg, key, duration: 2 });\r\n}, 100) \r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport const fetchOneClient = (id) => async dispatch =>{\r\n  const key = 'update';\r\n  dispatch(getClient())\r\n  \r\n\r\n  try {\r\n      \r\n      const {data} = await axios.get(keyUri + `/api/client/${id}`)\r\n     \r\n      dispatch(getCurrentClient(data))\r\n\r\n  } catch (error) {\r\n\r\ndispatch(getClientError())\r\nsetTimeout(() => {\r\n\r\n  message.error({ content: error.response.data.msg, key, duration: 2 });\r\n}, 100) \r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const deleteClient = (id) => async dispatch =>{\r\n  const key = 'login';\r\n  dispatch(getClient())\r\n  message.loading({ content: 'loading...', key })\r\n\r\n  try {\r\n      \r\n      const {data} = await axios.delete(keyUri + `/api/client/${id}`)\r\n  \r\n      data &&  message.success({ content: data.msg, key, duration: 2 });\r\n\r\n      dispatch(fetchAllClients())\r\n\r\n  } catch (error) {\r\n\r\ndispatch(getClientError())\r\nsetTimeout(() => {\r\n\r\n  message.error({ content: error.response.data.msg, key, duration: 2 });\r\n}, 100) \r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n\r\nexport const deleteManyClient = (values) => async dispatch =>{\r\n\r\n  console.log(values);\r\n  const key = 'delete';\r\n  dispatch(getClient())\r\n  message.loading({ content: 'loading...', key })\r\n\r\n  try {\r\n      \r\n      const {data} = await axios.post(keyUri + `/api/client-many`, values, config )\r\n  \r\n      data &&  message.success({ content: data.msg, key, duration: 2 });\r\n\r\n      dispatch(fetchAllClients())\r\n\r\n  } catch (error) {\r\n\r\ndispatch(getClientError())\r\nsetTimeout(() => {\r\n\r\n  message.error({ content: error.response.data.msg, key, duration: 2 });\r\n}, 100) \r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\spin.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\datatable.js",["183","184"],"import React, {useState, useEffect} from 'react'\r\nimport {Table, Space} from 'antd'\r\nimport {FaRegEdit,  FaRegTrashAlt, FaTrashAlt} from 'react-icons/fa'\r\nimport {AiOutlineClose} from 'react-icons/ai'\r\n\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport { deleteClient, deleteManyClient} from '../../../api/clientSlice'\r\nimport {useDispatch} from 'react-redux'\r\n// import moment from 'moment'\r\nimport DeleteConfirm from '../../shared/deleteConfirm'\r\nimport ExcelBtn from '../../shared/exportExcel'\r\nimport Search from '../../shared/search'\r\nimport styled from 'styled-components'\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function Datatable({data}) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [selectionType, setSelectionType] = useState('checkbox');\r\n    const [selectionKey, setSelectionKey] = useState([]);\r\n\r\n\r\n\r\n    const confirm = (e, id) => {\r\n        dispatch(deleteClient(id._id))\r\n       \r\n      }\r\n      \r\n      const cancel = (e) =>{\r\n        return null\r\n      }\r\n\r\n\r\n\r\n    const columns = [\r\n      \r\n      {\r\n        title: 'Customer Id',\r\n        dataIndex: 'client_id',\r\n        key: 'client_id',\r\n      },\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'client_name',\r\n          key: 'client_name',\r\n          sorter: (a, b) => a.client_name.length - b.client_name.length,\r\n          sortDirections: ['descend', 'ascend'],\r\n        },\r\n        \r\n        {\r\n          title: 'phone Number',\r\n          dataIndex: 'phone_number',\r\n          key: 'phone_number',\r\n        },\r\n        {\r\n          title: 'email',\r\n          dataIndex: 'email',\r\n          key: 'email',\r\n        },\r\n        {\r\n            title: 'Requirement',\r\n            dataIndex: 'client_requirement',\r\n            key: 'client_requirement',\r\n          },\r\n          {\r\n            title: 'Budget',\r\n            dataIndex: 'bugjet_info',\r\n            render:(budjet =>{\r\n              console.log(budjet);\r\n          return   <p>{budjet.bugjet_price}</p>\r\n            }),\r\n            key: 'client_requirement',\r\n          }, \r\n        {\r\n            title: 'customer_type',\r\n            dataIndex: 'customer_type',\r\n            key: 'customer_type',\r\n          },\r\n          \r\n        {\r\n            title: 'Location ',\r\n            dataIndex: 'location',\r\n            render:(loc =>{\r\n     \r\n          return   <p>{loc.locality}</p>\r\n            }),\r\n            key: 'customer_type',\r\n          },\r\n          {\r\n            title: 'Furnished',\r\n            dataIndex: 'isFurnist',\r\n            filters: [\r\n              {\r\n                text: 'Furnished ',\r\n                value: true,\r\n              },\r\n              {\r\n                text: 'Unfurnished',\r\n                value: false,\r\n              }\r\n            ],\r\n\r\n\r\n            onFilter: (value, record) => {\r\n\r\n            return  record.isFurnist === value\r\n            },\r\n           render:(record)=>{\r\n\r\n            return  <p className=\"mb-0\" style={{color:record?\"green\" : \"blue\"}}>{record? \"Furnist\" : \"Non-Furnist\"}</p>\r\n\r\n           }\r\n          },\r\n          {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (id) => {\r\n  \r\n  \r\n            return  <Space size=\"middle\" align=\"center\">\r\n                \r\n                <h5 className=\"text-dark\">\r\n                 <Link to={`/dashboard/client/${id._id}`}>\r\n                  <FaRegEdit/> \r\n                   </Link> \r\n                  \r\n                  \r\n                  </h5>\r\n              <h5>\r\n                  <DeleteConfirm confirm={(e)=>confirm(e, id)} title=\"blog\" cancel={cancel} >\r\n                      <FaRegTrashAlt   style={{cursor:\"pointer\", color:\"red\"}} />\r\n                  </DeleteConfirm>\r\n              </h5>\r\n  \r\n              </Space>\r\n          },\r\n          },\r\n      ];\r\n\r\n\r\n      const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => {\r\n\r\n\r\n          setSelectionKey(selectedRowKeys)\r\n          console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n        },\r\n        getCheckboxProps: (record) => ({\r\n          disabled: record.name === 'Disabled User',\r\n          // Column configuration not to be checked\r\n          name: record.name,\r\n        }),\r\n      };\r\n\r\n      const variants = {\r\n        open: { opacity: 1, y: 0 },\r\n        closed: { opacity: 0, y: \"3.5rem\" },\r\n      }\r\n\r\n    return (\r\n        <DataTableWrap>\r\n          <div className=\" flex justify-between\">\r\n            <Search title=\"client\"/>\r\n            <ExcelBtn dataSource={data} columns={columns}/>\r\n        </div>\r\n\r\n        <motion.div\r\n          animate={selectionKey.length>0 ? \"open\" : \"closed\"}\r\n          variants={variants}\r\n          // transition={{ duration: 0.2 }}\r\n        id=\"deleteItems\" className=\"flex  justify-between px-4 multidelete items-center \">\r\n\r\n          <div className=\"flex justify-around\" style={{color:\"rgb(17 99 73)\"}}>\r\n   <AiOutlineClose onClick={()=>setSelectionKey([])} className=\"mt-1 cursor-pointer\"/>\r\n            &nbsp; &nbsp;{selectionKey.length}  selected</div>\r\n\r\n          <div className=\"flex justify-around \" style={{color:\"#f44336\"}}>\r\n            <FaTrashAlt onClick={()=>dispatch(deleteManyClient(selectionKey))} className=\"mt-1 cursor-pointer\"/>  &nbsp; delete</div>\r\n        </motion.div>\r\n         \r\n            <Table \r\n      rowSelection={{\r\n        type: selectionType,\r\n        ...rowSelection,\r\n      }}         \r\n      \r\n      rowKey={record=>record._id}\r\n             dataSource={data} \r\n             columns={columns} />\r\n        </DataTableWrap>\r\n    )\r\n}\r\n\r\n\r\nconst DataTableWrap = styled.div`\r\n\r\nposition:relative;\r\n.multidelete{\r\n\r\n  position:absolute;\r\n  top:0%;\r\n  left:0%;\r\n  transform:translate(-50%, -50%);\r\n  width:100%;\r\n  height:3.5rem;\r\n background-color:#fff1f1;\r\nfont-size:1rem;\r\n\r\n}\r\n\r\n\r\n\r\n`","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\deleteConfirm.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\clients\\editClient.js",["185","186","187","188"],"import React, { useEffect } from 'react'\r\nimport { Form, Input, Button, Select, Radio, Space } from 'antd';\r\nimport {clientSelector, fetchOneClient, editClient} from '../../../api/clientSlice'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useParams} from 'react-router-dom'\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport {PropertySettingSelector,  fetchAllSettings} from '../../../api/propertySettings'\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nconst phoneMsg = [\"Home\", \"Office\", \"Work\", \"Other\"]\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 3,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 3,\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n  const tail2Layout = {\r\n    wrapperCol: {\r\n      offset: 3,\r\n      span: 10,\r\n    },\r\n  };\r\n\r\n  const tail3Layout = {\r\n    wrapperCol: {\r\n      offset: 2,\r\n      span: 10,\r\n    },\r\n  };\r\nexport default function Createclient() {\r\n\r\n    const [form] = Form.useForm();\r\n const dispatch = useDispatch()\r\n const {loadnig, current_client} = useSelector(clientSelector)\r\n const { settings } = useSelector(PropertySettingSelector)\r\n\r\nconst { id } = useParams()\r\n\r\nuseEffect(()=>{\r\n\r\n    dispatch(fetchOneClient(id))\r\n\r\n    current_client &&   form.setFieldsValue({\r\n         client_name: current_client.client_name,\r\n         phone_number: current_client.phone_number,\r\n         client_requirement: current_client.client_requirement,\r\n         comment: current_client.comment,\r\n         company_name: current_client.company_name,\r\n         customer_type: current_client.customer_type,\r\n          client_id: current_client.client_id,\r\n          isfurnished: current_client.isfurnished,\r\n\r\n\r\n        email: current_client.email,\r\n        address: current_client.address,\r\n        customer_type: current_client.customer_type,\r\n        other_phone:current_client.other_phone,\r\n        other_emails:current_client.other_emails,\r\n\r\n        location: {\r\n          locality:current_client.location.locality,\r\n            state:current_client.location.state\r\n        },\r\n        bugjet_info : {\r\n          bugjet_price:current_client.bugjet_info.bugjet_price\r\n        },\r\n        \r\n        property_size:{\r\n\r\n            sqft:current_client.property_size.sqft,\r\n           cm:current_client.property_size.cm,\r\n           feet:current_client.property_size.feet,\r\n\r\n        },\r\n    \r\n\r\n      });\r\n\r\n\r\n}, [dispatch])\r\n\r\n\r\n\r\n\r\n\r\n    const onFinish = (values) => {\r\n        // console.log('Success:', values);\r\n\r\n\r\n        dispatch(editClient(id, values))\r\n        form.resetFields()\r\n      };\r\n\r\n\r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n\r\n\r\n      const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n          <Select defaultValue=\"Lac\" style={{ width: 70 }}>\r\n            <Option value=\"Lac\">Lac</Option>\r\n            <Option value=\"Cr\">Cr</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n\r\n    return (\r\n        <div>\r\n          \r\n          { current_client &&       <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      form={form}\r\n      initialValues={{\r\n        remember: true,\r\n        prefix: 'Lac',\r\n\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n     \r\n     <Form.Item\r\n        label=\"Name\"\r\n        name=\"client_name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your Name!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Company Name\"\r\n        name=\"company_name\"\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n           <Form.Item\r\n        label=\"Client Requirement\"\r\n        name=\"client_requirement\"\r\n      >\r\n\r\n     <Select style={{ width: 270 }} >\r\n   \r\n   {  settings.map((item, i)=>{\r\n\r\nreturn <option key={i} value={item.property}>{item.property}</option>\r\n\r\n})}\r\n\r\n\r\n    </Select> \r\n\r\n\r\n\r\n      </Form.Item>\r\n\r\n <Form.Item\r\n        label=\"Client ID\"\r\n        name=\"client_id\"\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item   \r\n       name=\"phone_number\"\r\n       label=\"Phone\"\r\n       rules={[{ required: true },\r\n        {min: 10},\r\n        {max:10},\r\n        {pattern:\"[0-9]\", message:\"Only Numbers\"}\r\n        ]}\r\n     >\r\n       <Input\r\n          addonBefore=\"+91\"\r\n          style={{\r\n           width: '100%',\r\n         }}\r\n       />\r\n     </Form.Item>\r\n\r\n\r\n\r\n\r\n  \r\n\r\n   \r\n\r\n <Form.Item    {...tail2Layout}> \r\n      <Form.List  name=\"other_phone\" >\r\n        {(fields, { add, remove }) => (\r\n          <>\r\n\r\n      {fields.map(field => (\r\n              <Space key={field.key}   style={{width:\"100%\"}}  align=\"baseline\">\r\n              \r\n                <Form.Item\r\n                \r\n                style={{width:\"100%\"}}\r\n                 {...field}\r\n                 fieldKey={[field.fieldKey, 'phone_number2']}\r\n               \r\n        name={field.name }\r\n        label={ field.name > 3 ? `other${field.name}` :  phoneMsg[field.name]   }\r\n        rules={[{ required: true },\r\n          {min: 10},\r\n          {max:10},\r\n          {pattern:\"[0-9]\", message:\"Only Numbers\"}\r\n          ]}\r\n      >\r\n        <Input\r\n          addonBefore=\"+91\"\r\n         \r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n             \r\n                <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n              </Space>\r\n            ))}\r\n        <Form.Item {...tail3Layout}>\r\n              <Button type=\"dashed\" className=\"ml-2\"   onClick={() => add()} block icon={<PlusOutlined />}>\r\n                Add Phone Number\r\n              </Button>\r\n            </Form.Item>\r\n\r\n            </>\r\n        )}\r\n      </Form.List>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item    {...tail2Layout}> \r\n      <Form.List name=\"other_emails\" >\r\n        {(fields, { add, remove }) => (\r\n          <>\r\n\r\n      {fields.map(field => (\r\n              <Space key={field.key}   style={{width:\"100%\"}}  align=\"baseline\">\r\n              \r\n                <Form.Item\r\n                \r\n                style={{width:\"100%\"}}\r\n                 {...field}\r\n                 fieldKey={[field.fieldKey, 'other_emails']}\r\n               \r\n        name={field.name }\r\n        label={`Email ${field.name + 1}`}\r\n     \r\n      >\r\n        <Input\r\n  \r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n             \r\n                <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n              </Space>\r\n            ))}\r\n        <Form.Item {...tail3Layout}>\r\n              <Button type=\"dashed\" className=\"ml-2\"   onClick={() => add()} block icon={<PlusOutlined />}>\r\n                Add Emails\r\n              </Button>\r\n            </Form.Item>\r\n\r\n            </>\r\n        )}\r\n      </Form.List>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Budget\"\r\n        name={['bugjet_info', 'bugjet_price']}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message:  ' is Required ',\r\n          },\r\n        ]}\r\n     \r\n      >\r\n\r\n     \r\n      <Input\r\n       placeholder=\"in ruppes\" addonBefore={prefixSelector} style={{ width: '50%' }}  />\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item\r\n        label=\"Address\"\r\n        name=\"address\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <TextArea rows={2} />\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"customer_type\" label=\"Customer_type\" rules={[{ required: true }]}>\r\n        <Select\r\n          placeholder=\"Select Customer type\"\r\n          allowClear\r\n        >\r\n          <Option value=\"Seller\">Seller</Option>\r\n          <Option value=\"Buyer\">Buyer</Option>\r\n          <Option value=\"builder\">builder</Option>\r\n          <Option value=\"agent\">agent</Option>\r\n     \r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"location\">\r\n        <Input.Group compact>\r\n\r\n        <Form.Item\r\n            name={['location', 'locality']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '40%' }} placeholder=\"locality\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['location', 'state']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '40%', marginLeft:\"1rem\" }} placeholder=\"state\" />\r\n          </Form.Item>\r\n        </Input.Group>\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item label=\"Property Size\">\r\n        <Input.Group compact>\r\n\r\n        <Form.Item\r\n            name={['property_size', 'sqft']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%' }} placeholder=\"sqft\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['property_size', 'cm']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginLeft:\"1rem\" }} placeholder=\"cm\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['property_size', 'feet']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Street is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginLeft:\"1rem\" }} placeholder=\"feet\" />\r\n          </Form.Item>\r\n\r\n        </Input.Group>\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item name=\"isfurnished\" label=\"furnished\">\r\n        <Radio.Group>\r\n          <Radio value=\"furnished\">furnished</Radio>\r\n          <Radio value=\"unfurnished\">unfurnished</Radio>\r\n        \r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Comment\"\r\n        name=\"comment\"\r\n     \r\n      >\r\n        <TextArea rows={3} />\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n}\r\n        </div>\r\n    )\r\n}\r\n","E:\\RealEstate_REST_API\\client\\src\\api\\empSlice.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\employees\\createEmployee.js",["189","190","191","192","193"],"import React, {useState} from 'react'\r\nimport { Form, Input, Upload, Button, Select, Radio } from 'antd';\r\nimport {employeeSelector, createEmployee} from '../../../api/empSlice'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport keyUri from '../../../key'\r\nimport { CloudUploadOutlined  } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 10,\r\n  },\r\n};\r\n\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 4,\r\n    span: 10,\r\n  },\r\n};\r\n\r\n\r\n\r\n\r\nexport default function CreateEmployeeF() {\r\n\r\n    const [form] = Form.useForm();\r\n const dispatch = useDispatch()\r\n\r\n const [imge, setImge] = useState(null)\r\n const [id_imge, setIDImge] = useState(null)\r\n\r\n\r\n//  const {loadnig} = useSelector()\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n\r\n        values.image = imge\r\n        values.image_id = id_imge\r\n\r\n        dispatch(createEmployee(values))\r\n        // form.resetFields()\r\n      };\r\n\r\n\r\n\r\n      const handleImage = () =>{\r\n\r\n    \r\n        window.cloudinary.openUploadWidget({ cloud_name: \"gajendra\", upload_preset: \"redux_twinepidemic\"},\r\n        function(error, result) {\r\n              result && setImge(result[0].url)\r\n            console.log(result);\r\n        })\r\n       \r\n       \r\n         }\r\n\r\n\r\n      const handleIDImage = () =>{\r\n\r\n    \r\n        window.cloudinary.openUploadWidget({ cloud_name: \"gajendra\", upload_preset: \"redux_twinepidemic\"},\r\n        function(error, result) {\r\n              result && setIDImge(result[0].url)\r\n            console.log(result);\r\n        })\r\n       \r\n       \r\n         }\r\n\r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n      const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n          <Select\r\n            style={{\r\n              width: 70,\r\n            }}\r\n          >\r\n            <Option value=\"91\">+91</Option>\r\n            <Option value=\"1\">+1</Option>\r\n\r\n            <Option value=\"87\">+87</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      );\r\n\r\n    return (\r\n        <div>\r\n                <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      form={form}\r\n      initialValues={{\r\n        remember: true,\r\n        prefix: '91',\r\n\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"employee_name\"\r\n        name=\"employee_name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"employee_id\"\r\n        name=\"employee_id\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"designation\"\r\n        name=\"designation\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"salary_date\"\r\n        name=\"salary_date\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"sallary\"\r\n        name=\"sallary\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"image\"\r\n        label=\"Image\"\r\n        valuePropName=\"file\"\r\n       \r\n      >\r\n        {/* <Upload name=\"image\" action={keyUri + `/api/upload`} listType=\"picture\"> */}\r\n          <Button type=\"primary\" onClick={handleImage} icon={<CloudUploadOutlined className=\" text-xl text-green-600\" />}> upload</Button> <br/>\r\n\r\n          {imge && <img className=\"my-4\" src={imge} alt=\"imgee\" width=\"120px\"/>}\r\n\r\n        {/* </Upload> */}\r\n      </Form.Item>\r\n\r\n \r\n\r\n        <Form.Item\r\n        name=\"image_id\"\r\n        label=\"Id image\"\r\n   \r\n      >\r\n        {/* <Upload name=\"image\" action={keyUri + `/api/upload`} listType=\"picture\"> */}\r\n          <Button type=\"primary\" onClick={handleIDImage} icon={<CloudUploadOutlined className=\" text-xl text-green-600\" />}> upload</Button> <br/>\r\n\r\n          {imge && <img className=\"my-4\" src={id_imge} alt=\"imgee\" width=\"120px\"/>}\r\n\r\n        {/* </Upload> */}\r\n      </Form.Item>\r\n\r\n\r\n\r\n\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"phone_number\"\r\n        label=\"Phone\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your phone number!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          addonBefore={prefixSelector}\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item\r\n        label=\"Address\"\r\n        name=\"address\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <TextArea rows={3} />\r\n      </Form.Item>\r\n\r\n\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n        </div>\r\n    )\r\n}\r\n","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\search.js",["194"],"import React from 'react'\r\nimport { Input } from 'antd';\r\nimport axios from 'axios'\r\nimport {fethFilter} from '../../api/authSlice'\r\nimport {useDispatch} from 'react-redux'\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components'\r\n// const { Search } = Input;\r\n\r\n\r\n\r\nexport default function SearchComponent({title}) {\r\n\r\n const dispatch = useDispatch()\r\n    const onSearch = (e) => {\r\n\r\n        dispatch(fethFilter(title, e.target.value ))\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <SearchWrap >\r\n             <Input className=\"px-4 py-2 focus:outline-none\"\r\n            suffix={  <SearchOutlined />\r\n            }\r\n             placeholder=\"input search text\" onChange={onSearch}  />\r\n        </SearchWrap>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst SearchWrap = styled.div`\r\n\r\n\r\nwidth:20%;\r\ntransition:0.3s ease-in-out;\r\n\r\n\r\n\r\n\r\n.ant-input-affix-wrapper > input.ant-input {\r\n\r\n\r\n\r\n\r\nbox-shadow: none !important;\r\n&:focus{\r\n\r\n    border-color:white !important;\r\n}\r\n&:hover{\r\n\r\n    border-color:white !important;\r\n}\r\n}\r\n`","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\exportExcel.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\employees\\index.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\employees\\datatable.js",["195","196"],"import React, {useState, useEffect} from 'react'\r\nimport {Table, Space} from 'antd'\r\nimport {FaRegEdit,  FaRegTrashAlt, FaTrashAlt} from 'react-icons/fa'\r\nimport {AiOutlineClose} from 'react-icons/ai'\r\n\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport { deleteEmployee, deleteManyEmployee} from '../../../api/empSlice'\r\nimport {useDispatch} from 'react-redux'\r\n// import moment from 'moment'\r\nimport DeleteConfirm from '../../shared/deleteConfirm'\r\nimport ExcelBtn from '../../shared/exportExcel'\r\nimport Search from '../../shared/search'\r\nimport styled from 'styled-components'\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function Datatable({data}) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [selectionType, setSelectionType] = useState('checkbox');\r\n    const [selectionKey, setSelectionKey] = useState([]);\r\n\r\n\r\n\r\n    const confirm = (e, id) => {\r\n        dispatch(deleteEmployee(id._id))\r\n       \r\n      }\r\n      \r\n      const cancel = (e) =>{\r\n        return null\r\n      }\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: 'client Name',\r\n          dataIndex: 'employee_name',\r\n          key: 'employee_name',\r\n          sorter: (a, b) => a.employee_name.length - b.employee_name.length,\r\n          sortDirections: ['descend', 'ascend'],\r\n        },\r\n        {\r\n          title: 'employee_id',\r\n          dataIndex: 'employee_id',\r\n          key: 'employee_id',\r\n        },\r\n        {\r\n          title: 'email',\r\n          dataIndex: 'email',\r\n          key: 'email',\r\n        },\r\n        {\r\n            title: 'designation',\r\n            dataIndex: 'designation',\r\n            key: 'designation',\r\n          },\r\n          {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (id) => {\r\n  \r\n  \r\n            return  <Space size=\"middle\" align=\"center\">\r\n                \r\n                <h5 className=\"text-dark\">\r\n                 <Link to={`/dashboard/employee/${id._id}`}>\r\n                  <FaRegEdit/> \r\n                   </Link> \r\n                  \r\n                  \r\n                  </h5>\r\n              <h5>\r\n                  <DeleteConfirm confirm={(e)=>confirm(e, id)} title=\"employee\" cancel={cancel} >\r\n                      <FaRegTrashAlt   style={{cursor:\"pointer\", color:\"red\"}} />\r\n                  </DeleteConfirm>\r\n              </h5>\r\n  \r\n              </Space>\r\n          },\r\n          },\r\n      ];\r\n\r\n\r\n      const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => {\r\n\r\n\r\n          setSelectionKey(selectedRowKeys)\r\n        },\r\n        getCheckboxProps: (record) => ({\r\n          disabled: record.name === 'Disabled User',\r\n          // Column configuration not to be checked\r\n          name: record.name,\r\n        }),\r\n      };\r\n\r\n      const variants = {\r\n        open: { opacity: 1, y: 0 },\r\n        closed: { opacity: 0, y: \"3.5rem\" },\r\n      }\r\n\r\n    return (\r\n        <DataTableWrap>\r\n          <div className=\" flex justify-between\">\r\n            <Search title=\"employee\"/>\r\n            <ExcelBtn dataSource={data} columns={columns}/>\r\n        </div>\r\n\r\n        <motion.div\r\n          animate={selectionKey.length>0 ? \"open\" : \"closed\"}\r\n          variants={variants}\r\n          // transition={{ duration: 0.2 }}\r\n        id=\"deleteItems\" className=\"flex  justify-between px-4 multidelete items-center \">\r\n\r\n          <div className=\"flex justify-around\" style={{color:\"rgb(17 99 73)\"}}>\r\n            <AiOutlineClose onClick={()=>setSelectionKey([])} className=\"mt-1 cursor-pointer\"/>\r\n            &nbsp; &nbsp;{selectionKey.length}  selected</div>\r\n\r\n          <div className=\"flex justify-around \" style={{color:\"#f44336\"}}>\r\n            <FaTrashAlt onClick={()=>dispatch(deleteManyEmployee(selectionKey))} className=\"mt-1 cursor-pointer\"/>  &nbsp; delete</div>\r\n        </motion.div>\r\n         \r\n            <Table \r\n      rowSelection={{\r\n        type: selectionType,\r\n        ...rowSelection,\r\n      }}         \r\n      \r\n      rowKey={record=>record._id}\r\n             dataSource={data} \r\n             columns={columns} />\r\n        </DataTableWrap>\r\n    )\r\n}\r\n\r\n\r\nconst DataTableWrap = styled.div`\r\n\r\nposition:relative;\r\n.multidelete{\r\n\r\n  position:absolute;\r\n  top:0%;\r\n  left:0%;\r\n  transform:translate(-50%, -50%);\r\n  width:100%;\r\n  height:3.5rem;\r\n background-color:#d8f1e9;\r\nfont-size:1rem;\r\n\r\n}\r\n\r\n\r\n\r\n`","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\properties\\createProperty.js",["197"],"import React,{ useEffect, useState} from 'react'\r\nimport { Form, Input, DatePicker, Button, Select, Radio, Space, InputNumber } from 'antd';\r\nimport {propertySelector, createproperty} from '../../../api/PropertySlice'\r\nimport {clientSelector, fetchAllClients, fetchOneClient} from '../../../api/clientSlice'\r\n\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { CloudUploadOutlined  } from '@ant-design/icons';\r\nimport {PropertySettingSelector, fetchAllSettings, fetchAllPropertySettings} from '../../../api/propertySettings'\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\nconst phoneMsg = [\"home\", \"work\", \"main\", \"other\"]\r\n\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 4,\r\n    },\r\n    wrapperCol: {\r\n      span: 20,\r\n    },\r\n  };\r\n\r\n  \r\n\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 4,\r\n      span: 10,\r\n    },\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function CreatePropertySec() {\r\n\r\n    const [form] = Form.useForm();\r\n const dispatch = useDispatch()\r\n const [value, setValue] = useState('residential');\r\n const [imge, setImge] = useState([])\r\n\r\n const [tvalue, setTValue] = useState('rent');\r\n const [loan, setLoan] = useState('no');\r\n\r\n\r\nconst { settings } = useSelector(PropertySettingSelector)\r\nconst { client, current_client } = useSelector(clientSelector)\r\n\r\n\r\n useEffect(()=>{\r\n\r\n  dispatch(fetchAllPropertySettings())\r\n    dispatch(fetchAllSettings())\r\n    dispatch(fetchAllClients())\r\n\r\n  // form.setFields({furnished_status:'furnished'})\r\n  }, [dispatch])\r\n\r\n\r\n\r\nlet commercial = settings.filter( item=>{\r\n\r\n  return item.property_type === 'commercial'\r\n\r\n})\r\n\r\nlet residential = settings.filter( item =>{\r\n\r\n  return item.property_type === 'residential'\r\n\r\n})\r\n\r\nlet warehouse = settings.filter(item =>{\r\n\r\n  return item.property_type === 'warehouse'\r\n\r\n})\r\n\r\n\r\n    const onFinish = (values) => {\r\n  \r\n        values.property_gallery = imge\r\n         values.property_type.property_catagory = value\r\n\r\n\r\n        dispatch(createproperty(values))\r\n        // form.resetFields()\r\n        // setImge([])\r\n      };\r\n\r\n\r\n\r\n\r\n      const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n\r\n\r\n      const handleImage = () =>{\r\n\r\n    \r\n        window.cloudinary.openUploadWidget({ cloud_name: \"gajendra\", upload_preset: \"redux_twinepidemic\"},\r\n        function(error, result) {\r\n\r\n\r\n         result &&  result.map(item =>{\r\n\r\n\r\n            return setImge(prev=>[...prev, item.url])\r\n\r\n          })\r\n\r\n          \r\n        })\r\n       \r\n       \r\n         }\r\n\r\nconst [fstate, setFState] = useState('furnished')\r\n\r\nconst fhandleChange =(value) =>{\r\n\r\n\r\n  setFState(value)\r\n\r\n}\r\n\r\nconst [ existclient, setExistClient ] = useState('new_property')\r\n\r\n\r\nconst ExistClient = (e) =>{\r\n\r\n  setExistClient(e.target.value);\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n    const onChangeTProperty = (e) =>{\r\n\r\n\r\n          setTValue(e.target.value);\r\n         }\r\n\r\n       \r\n\r\n         const onChangeProperty = (e) =>{\r\n\r\n\r\n          setValue(e.target.value);\r\n         }\r\n\r\n const handleLoan = (e) =>{\r\n\r\n\r\n          setLoan(e.target.value);\r\n         }\r\nconst [current_c, setCurrentC] = useState(null)\r\n\r\n    const handleChangeClient = (value) =>{\r\n\r\n      setCurrentC(value)\r\n       dispatch(fetchOneClient(value));\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n         const prefixSelector = (\r\n          <Form.Item name=\"prefix\" noStyle>\r\n            <Select defaultValue=\"Lac\" style={{ width: 70 }}>\r\n              <Option value=\"Lac\">Lac</Option>\r\n              <Option value=\"Cr\">Cr</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        );\r\n \r\n    return (\r\n\r\n        \r\n                <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      form={form}\r\n      initialValues={{\r\n        prefix: 'Lac',\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n        <div className=\"grid grid-cols-5 \">\r\n\r\n  <div className=\" col-span-3 pr-3 leftform \" style={{overflowY:\"auto\"}}>\r\n\r\n\r\n      <Form.Item\r\n        label=\"project Name\"\r\n        name=\"project_name\"\r\n      \r\n      >\r\n        <Input   placeholder=\"project name\" />\r\n      </Form.Item>\r\n\r\n\r\n     \r\n\r\n\r\n\r\n\r\n      <Form.Item label=\"Project Address\">\r\n      <Input.Group compact>\r\n\r\n      <Form.Item\r\n        name={[\"owner_info\", 'city']}\r\n        style={{ border:\"none\"}} \r\n       rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your city!',\r\n          },\r\n        ]}>\r\n      \r\n      <Input placeholder=\"city\"  />\r\n\r\n       </Form.Item>\r\n\r\n\r\n       <Form.Item\r\n        name={[\"owner_info\", 'locality']}\r\n       rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your locality!',\r\n          },\r\n        ]}>\r\n       <Input placeholder=\"locality\" style={{marginLeft:\"2rem\"}}/>\r\n\r\n\r\n       </Form.Item>\r\n\r\n        </Input.Group>\r\n      </Form.Item>\r\n      <Form.Item\r\n  label=\":\"\r\n        name={[\"owner_info\", 'address']}\r\n      \r\n      >\r\n        <TextArea rows={3} placeholder=\"Address\" style={{transform:\"translateY(-1.5rem)\"}} />\r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item  name={['property_type', 'property_catagory']} label=\"Property Type\">\r\n        <Radio.Group defaultValue=\"residential\" onChange={onChangeProperty}>\r\n          <Radio value=\"residential\">Residential</Radio>\r\n          <Radio value=\"commercial\">Commercial</Radio>\r\n          <Radio value=\"wharehouse\">WhareHouse</Radio>\r\n\r\n        \r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n\r\n\r\n\r\n      <Form.Item name={['property_type', 'property_type_info']} label=\":\">\r\n    \r\n      <Select\r\n          placeholder=\"Select property type\"\r\n          allowClear\r\n          style={{ width: '50%'}}\r\n        >\r\n\r\n          {\r\nvalue === 'residential' && residential.map((item, i)=>{\r\n\r\n  return <option key={i} value={item.property}>{item.property}</option>\r\n\r\n})\r\n\r\n          }\r\n\r\n{\r\nvalue === 'commercial' && commercial.map((item, i)=>{\r\n\r\n  return <option key={i} value={item.property}>{item.property}</option>\r\n\r\n})\r\n\r\n\r\n          }\r\n\r\n{\r\nvalue === 'wharehouse' && warehouse.map((item, i)=>{\r\n\r\n  return <option key={i} value={item.property}>{item.property}</option>\r\n\r\n})\r\n\r\n\r\n          }\r\n\r\n     \r\n        </Select>\r\n\r\n\r\n      </Form.Item>\r\n        \r\n\r\n\r\n      <Form.Item  name={['property_type', 'client_catagory']} label=\"Client Type\">\r\n        <Radio.Group defaultValue=\"rent\" onChange={onChangeTProperty}>\r\n          <Radio value=\"rent\">Rent</Radio>\r\n          <Radio value=\"lease\">Lease</Radio>\r\n          <Radio value=\"seller\">Seller</Radio>\r\n\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n{ (tvalue === 'seller') &&  <>   <Form.Item  label=\"Bank Loan\">\r\n        <Radio.Group  onChange={handleLoan} value={loan} >\r\n          <Radio value=\"yes\">yes</Radio>\r\n          <Radio value=\"no\">no</Radio>\r\n     \r\n\r\n        </Radio.Group>\r\n      </Form.Item>\r\n      \r\n \r\n</>\r\n      \r\n      }\r\n\r\n\r\n{\r\n\r\n(loan === 'yes') &&  <Form.Item  name='loan_amount' label=\"Bank Loan\">\r\n      <Input placeholder=\"loan amount\" style={{width:\"50%\"}}/>\r\n\r\n      </Form.Item>\r\n    } \r\n\r\n\r\n      <Form.Item\r\n        label=\"property Price\"\r\n        name={[\"property_info\", \"project_price\"]}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message:  ' is Required ',\r\n          },\r\n        ]}\r\n     \r\n      >\r\n\r\n     \r\n      <Input\r\n       placeholder=\"in ruppes\" addonBefore={prefixSelector} style={{ width: '50%' }}  />\r\n      </Form.Item>\r\n\r\n\r\n\r\n\r\n      <Form.Item label=\"Property Info\">\r\n\r\n\r\n\r\n        <Input.Group compact>\r\n\r\n        <Form.Item\r\n            name={['property_info', 'site_area']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'site_area is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%' }} placeholder=\"site_area in sqft\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['property_info', 'builtup_area']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Builtup is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginLeft:\"1rem\" }} placeholder=\"Builtup in sqft\" />\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item\r\n            name={['property_info', 'offered_area']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'offered_area is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginLeft:\"1rem\" }} placeholder=\"offered_area in sqft\" />\r\n          </Form.Item>\r\n\r\n        <Form.Item\r\n            name={['property_info', 'rent']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'rent is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginTop:\"1.5rem\" }} placeholder=\"rent in sqft\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['property_info', 'deposit']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'deposit is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginTop:\"1.5rem\", marginLeft:\"1rem\" }} placeholder=\"deposit\" />\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item\r\n            name={['property_info', 'property_age']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'property_age is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginTop:\"1.5rem\", marginLeft:\"1rem\" }} placeholder=\"property_age\" />\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item\r\n            name={['property_info', 'notice_period']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'notice_period is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginTop:\"1.5rem\" }} placeholder=\"notice_period\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['property_info', 'total_floor']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'total floor is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginTop:\"1.5rem\",  marginLeft:\"1rem\" }} placeholder=\"total floor\" />\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item\r\n            name={['property_info', 'escalation']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'escalation is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginTop:\"1.5rem\", marginLeft:\"1rem\" }} placeholder=\"escalation\" />\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item\r\n            name={['property_info', 'build_effeciency']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'build_effeciency is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginTop:\"1.5rem\" }} placeholder=\"build_effeciency\" />\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item\r\n            name={['property_info', 'power']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'power is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%',marginTop:\"1.5rem\", marginLeft:\"1rem\" }} placeholder=\"power in Kva\" />\r\n          </Form.Item>\r\n          \r\n  <Form.Item\r\n            name={['property_info', 'property_facing']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'property_facing is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%',marginTop:\"1.5rem\", marginLeft:\"1rem\" }} placeholder=\"property_facing \" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['property_info', 'water']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'water is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginTop:\"1.5rem\" }} placeholder=\"water \" />\r\n          </Form.Item>\r\n\r\n\r\n <Form.Item\r\n            name={['property_info', 'rent_free_period']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'rent_free_period is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginLeft:\"1rem\", marginTop:\"1.5rem\" }} placeholder=\"rent_free_period in months \" />\r\n          </Form.Item>\r\n\r\n <Form.Item\r\n            name={['property_info', 'lock_in']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'lock_in is required' }]}\r\n          >\r\n            <Input  style={{ width: '30%', marginLeft:\"1rem\", marginTop:\"1.5rem\" }} placeholder=\"lock-in in years \" />\r\n          </Form.Item>\r\n\r\n\r\n \r\n\r\n          \r\n\r\n          <Form.Item\r\n            name={['property_info', 'ownership_type']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'OwnerShip is required' }]}\r\n          >\r\n\r\n<Select\r\n          \r\n          allowClear\r\n          placeholder=\"OwnerShip\"\r\n          style={{ width: '30%', marginTop:\"1.5rem\", border:\"none\" }}\r\n        >\r\n          <Option value=\"freehold\">freehold</Option>\r\n          <Option value=\"leasehold\">leasehold</Option>\r\n          <Option value=\"Power of Attorney\">Power of Attorney</Option>\r\n          <Option value=\"Co-operative society\">Co-operative society</Option>\r\n\r\n     \r\n        </Select>\r\n\r\n          </Form.Item>\r\n\r\n\r\n      <Form.Item\r\n            name={['property_info', 'floor']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'floor is required' }]}\r\n          >\r\n\r\n<InputNumber  style={{ width: '30%', marginTop:\"1.5rem\", marginLeft:\"1rem\"  }} placeholder=\"floor\" />\r\n\r\n       \r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['property_info', 'bed_room']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'bhk is required' }]}\r\n          >\r\n     \r\n     <InputNumber \r\n      style={{ width: '30%', marginLeft:\"1rem\",  marginTop:\"1.5rem\"  }}\r\n       placeholder=\"bed_room\" />\r\n\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item\r\n            name={['property_info', 'bath_room']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'bath_room is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%', marginTop:\"1.5rem\"}} placeholder=\"bath_room\" />\r\n\r\n          </Form.Item>\r\n\r\n\r\n      \r\n\r\n          <Form.Item\r\n            name={['property_info', 'car_parking']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'car_parking is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%', marginLeft:\"1rem\", marginTop:\"1.5rem\" }} placeholder=\"car_parking\" />\r\n\r\n          </Form.Item>\r\n\r\n\r\n  \r\n\r\n          <Form.Item\r\n            name={['property_info', 'balconies']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Balconies is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%', marginTop:\"1.5rem\", marginLeft:\"1rem\" }} placeholder=\"Balconies\" />\r\n\r\n          </Form.Item>\r\n\r\n          \r\n          <Form.Item\r\n            name={['property_info', 'store_room']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'store_room is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%',  marginTop:\"1.5rem\"  }} placeholder=\"store_room\" />\r\n\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['property_info', 'sale_type']}\r\n            noStyle\r\n            rules={[{ required: true, message: ' is required' }]}\r\n          >\r\n     \r\n\r\n        <Select\r\n          placeholder=\"Sale Type\"\r\n          allowClear\r\n          style={{ width: '30%', border:\"none\",  marginTop:\"1.5rem\", marginLeft:\"1rem\"}}\r\n        >\r\n          <Option value=\"new\">New</Option>\r\n          <Option value=\"re-sale\">ReSale</Option>\r\n\r\n     \r\n        </Select>\r\n\r\n\r\n\r\n\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item\r\n            name={['property_info', 'construction_status']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'construction_status is required' }]}\r\n          >\r\n     \r\n\r\n        <Select\r\n          placeholder=\"Possession\"\r\n          allowClear\r\n          style={{ width: '30%', border:\"none\",  marginTop:\"1.5rem\", marginLeft:\"1rem\"}}\r\n        >\r\n          <Option value=\"ready-to-move\">Ready to Move</Option>\r\n          <Option value=\"Under-Construction\">Under Construction</Option>\r\n  \r\n\r\n     \r\n        </Select>\r\n\r\n\r\n\r\n\r\n          </Form.Item>\r\n\r\n     { (value === 'residential') && <>   <Form.Item\r\n            name={['property_info', 'servent_room']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'Balconies is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%', marginTop:\"1.5rem\" }} placeholder=\"servent_room\" />\r\n\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item\r\n            name={['property_info', 'servent_room_bathroom']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'servent_room is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%', marginTop:\"1.5rem\", marginLeft:\"1rem\" }} placeholder=\"servent_room_bathroom\" />\r\n\r\n          </Form.Item> </>}\r\n\r\n        </Input.Group>\r\n      </Form.Item>\r\n\r\n\r\n<Form.Item label=\":\">\r\n\r\n      <Form.Item  className=\"\"  name={['property_type', 'power_type']} label=\"is UPS\">\r\n        <Radio.Group defaultValue=\"Kva\" onChange={onChangeTProperty}>\r\n          <Radio value=\"UPS\">UPS</Radio>\r\n          <Radio value=\"Kva\">Kva</Radio>\r\n     \r\n\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n \r\n\r\n\r\n      <Form.Item  name={['property_type', 'Signage']} label=\"Signage\">\r\n        <Radio.Group defaultValue=\"yes\">\r\n          <Radio value=\"yes\">yes</Radio>\r\n          <Radio value=\"no\">no</Radio>\r\n     \r\n\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n   <Form.Item  name={['property_type', 'vastu']} label=\"vastu\">\r\n        <Radio.Group defaultValue=\"yes\">\r\n          <Radio value=\"yes\">yes</Radio>\r\n          <Radio value=\"no\">no</Radio>\r\n     \r\n\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n      <Form.Item  name={['property_type', 'corner_type']} label=\"Corner type\">\r\n        <Radio.Group defaultValue=\"yes\" >\r\n          <Radio value=\"yes\">yes</Radio>\r\n          <Radio value=\"no\">no</Radio>\r\n     \r\n\r\n        </Radio.Group>\r\n      </Form.Item>\r\n\r\n<Form.Item\r\nname='furnished_info'\r\n>\r\n\r\n\r\n<Form.Item\r\n\r\n    name={['furnished_info', 'furnished_status']}\r\n     noStyle\r\n    rules={[{ required: true, message: 'furnished_status is required' }]}\r\n    initialValue=\"furnished\"\r\n\r\n          >\r\n     \r\n\r\n        <Select\r\n          placeholder=\"Select furnished Status\"\r\n          allowClear\r\n          onChange={fhandleChange}\r\n          style={{ width: '60%',  marginTop:\"1.5rem\"}}\r\n          value={fstate}\r\n        >\r\n          <Option value=\"furnished\">furnished</Option>\r\n          <Option value=\"semi-furnished\">semi-furnished</Option>\r\n          <Option value=\"unfurnished\">unfurnished</Option>\r\n\r\n     \r\n        </Select>\r\n\r\n          </Form.Item>\r\n\r\n{\r\n\r\n  (fstate !== 'unfurnished') && \r\n\r\n<Input.Group compact>\r\n          <Form.Item\r\n            name={['furnished_info', 'work_station']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'work_station is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%',  marginTop:\"1.5rem\" }} placeholder=\"work_station\" />\r\n\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item\r\n            name={['furnished_info', 'manager_cabin']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'work_station is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%', marginLeft:\"1rem\", marginTop:\"1.5rem\" }} placeholder=\"manager_cabin\" />\r\n\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['furnished_info', 'discussion_room']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'discussion_room is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%', marginLeft:\"1rem\", marginTop:\"1.5rem\" }} placeholder=\"discussion_room\" />\r\n\r\n          </Form.Item>\r\n\r\n    \r\n\r\n          <Form.Item\r\n            name={['furnished_info', 'conference_room']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'conference_room is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%', marginTop:\"1.5rem\" }} placeholder=\"conference_room\" />\r\n\r\n          </Form.Item>\r\n\r\n\r\n        \r\n\r\n\r\n          <Form.Item\r\n            name={['furnished_info', 'training_room']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'training_room is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%', marginLeft:\"1rem\", marginTop:\"1.5rem\" }} placeholder=\"training_room\" />\r\n\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['furnished_info', 'board_room']}\r\n            noStyle\r\n            rules={[{ required: true,  message: 'board_room is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%', marginLeft:\"1rem\",  marginTop:\"1.5rem\" }} placeholder=\"board_room\" />\r\n\r\n          </Form.Item>\r\n\r\n\r\n\r\n          <Form.Item\r\n            name={['furnished_info', 'electrical_room']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'electrical_room is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%',  marginTop:\"1.5rem\" }} placeholder=\"electrical_room\" />\r\n\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={['furnished_info', 'server_room']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'server_room is required' }]}\r\n          >\r\n     \r\n     <InputNumber  style={{ width: '30%', marginLeft:\"1rem\", marginTop:\"1.5rem\" }} placeholder=\"server_room\" />\r\n\r\n          </Form.Item>\r\n\r\n\r\n\r\n     \r\n\r\n\r\n          <Form.Item\r\n            name={['furnished_info', 'EPABX']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'EPABX is required' }]}\r\n          >\r\n     \r\n     <Input  style={{ width: '30%',  marginLeft:\"1rem\", marginTop:\"1.5rem\" }} placeholder=\"EPABX\" />\r\n\r\n          </Form.Item>\r\n\r\n\r\n\r\n          <Form.Item\r\n            name={['furnished_info', 'project_head']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'project_head is required' }]}\r\n          >\r\n     \r\n     <Input  style={{ width: '30%', marginTop:\"1.5rem\" }} placeholder=\"project_head\" />\r\n\r\n          </Form.Item>\r\n\r\n\r\n\r\n\r\n          <Form.Item\r\n            name={['furnished_info', 'airconditioning']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'airconditioning is required' }]}\r\n          >\r\n     \r\n     <Input  style={{ width: '30%', marginLeft:\"1rem\",  marginTop:\"1.5rem\" }} placeholder=\"airconditioning\" />\r\n\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item\r\n            name={['furnished_info', 'pantry']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'pantry is required' }]}\r\n          >\r\n     \r\n     <Input  style={{ width: '30%',  marginLeft:\"1rem\",  marginTop:\"1.5rem\" }} placeholder=\"pantry\" />\r\n\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item\r\n            name={['furnished_info', 'date_of_furnishing']}\r\n            noStyle\r\n            rules={[{ required: true, message: 'date_of_furnishing is required' }]}\r\n          >\r\n     \r\n     <DatePicker style={{ width: '30%',  marginTop:\"1.5rem\" }} placeholder=\"date_of_furnishing\" />\r\n     {/* <Input   /> */}\r\n\r\n          </Form.Item>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </Input.Group>\r\n\r\n}\r\n</Form.Item>\r\n</Form.Item>\r\n\r\n\r\n   \r\n    </div>\r\n\r\n    <div style={{height:\"84vh\", overflowY:\"auto\", backgroundColor:\"#e4d0d06b\"}} className=\"flex justify-center   col-span-2 pl-3\">\r\n\r\n<div  className=\"w-full\">\r\n    <Form.Item\r\n        name=\"property_gallery\"\r\n      \r\n      >\r\n\r\n          <Button type=\"primary\" className=\"mt-5 mb-2\" onClick={handleImage} icon={<CloudUploadOutlined className=\" text-xl text-green-600\" />}> upload property images</Button> <br/>\r\n\r\n<div className=\"grid grid-cols-5 gap-3 \">\r\n{\r\n\r\n(imge.length > 0 ) && imge.map((item, i)=>{\r\n\r\n\r\n  return <div key={i} >\r\n   <img   src={item} alt=\"imgee\"\r\n    height=\"90px\" \r\n   className=\"p-1 mt-2\"\r\n   style={{backgroundColor:\"#f5f5f5\"}}\r\n     width=\"150px\"/>\r\n</div>\r\n})\r\n\r\n}\r\n</div>\r\n\r\n\r\n   \r\n      </Form.Item>\r\n\r\n\r\n      <Form.Item>\r\n\r\n      <Radio.Group onChange={ExistClient} value={existclient}  size=\"middle\">\r\n      <Radio.Button value=\"new_property\">New Property</Radio.Button>\r\n      <Radio.Button value=\"exist_property\">Exist Client Property</Radio.Button>\r\n \r\n    </Radio.Group> \r\n        \r\n      </Form.Item>\r\n\r\n\r\n      {\r\n     existclient === 'exist_property' && <>\r\n\r\n      <Form.Item >\r\n\r\n        <Select placeholder=\"Client Name\" value={current_c} style={{ width:'100%'}} onChange={handleChangeClient}>\r\n      {\r\n        client.map((item, i)=>{\r\n\r\n          return  <Option key={i}  value={item._id}>{item.client_name}</Option>\r\n\r\n \r\n        })\r\n      \r\n      }\r\n    </Select>\r\n\r\n      </Form.Item>\r\n\r\n\r\n      {  ( current_c   && current_client) && <div>\r\n       \r\n       <p>client_name:&nbsp;<b>{ current_client.client_name}</b></p>\r\n       <p>phone_number:&nbsp;<b>{ current_client.phone_number}</b></p>\r\n       <p>email:&nbsp;<b>{ current_client.email}</b></p>\r\n       <p>address:&nbsp;<b>{ current_client.address}</b></p>\r\n       <p>customer_type:&nbsp;<b>{ current_client.customer_type}</b></p>\r\n\r\n      </div>}\r\n\r\n\r\n\r\n     \r\n      <Form.Item >\r\n\r\n       <Input name=\"refference\" placeholder=\"Refrence\"/>\r\n\r\n      </Form.Item>\r\n\r\n\r\n\r\n      \r\n       </>\r\n\r\n      }\r\n      \r\n\r\n{\r\n\r\nexistclient === 'new_property' && \r\n<>\r\n<Form.Item name=\"owner_info\">\r\n     \r\n\r\n\r\n<Form.Item\r\n\r\nname={['owner_info', 'contact_by']}\r\n\r\n>\r\n<Input  style={{ width: '100%' }} placeholder=\"contact_by\" />\r\n</Form.Item>\r\n\r\n<Form.Item   \r\nname={['owner_info', 'phone_number']}\r\nplaceholder=\"phone_number\"\r\n\r\n\r\nrules={[\r\n {\r\n   required: true,\r\n   message: 'Please input your phone number!',\r\n },\r\n]}\r\n>\r\n<Input\r\n  addonBefore=\"+91\"\r\n  placeholder=\"primary phone Number\"\r\n  style={{\r\n   width: '100%'\r\n }}\r\n \r\n/>\r\n</Form.Item>\r\n\r\n<Form.Item > \r\n<Form.List name={['owner_info', 'other_phone']} >\r\n{(fields, { add, remove }) => (\r\n  <>\r\n\r\n{fields.map(field => (\r\n      <Space key={field.key}   style={{display:\"block\"}}  align=\"center\">\r\n      \r\n        <Form.Item\r\n        \r\n        style={{width:\"100%\"}}\r\n         {...field}\r\n         fieldKey={[field.fieldKey, 'other_phone']}\r\n       \r\nname={field.name }\r\nlabel={ field.name > 3 ? `other${field.name}` :  phoneMsg[field.name]   }\r\n\r\n>\r\n<Input\r\n  addonBefore=\"+91\"\r\n \r\n  style={{\r\n    width: '100%',\r\n  }}\r\n/>\r\n<MinusCircleOutlined style={{color:\"var(--brandColor)\"}} className=\"float-right mt-2\" onClick={() => remove(field.name)} />\r\n</Form.Item>\r\n     \r\n        \r\n      </Space>\r\n    ))}\r\n\r\n\r\n<Form.Item >\r\n      <Button type=\"dashed\"     onClick={() => add()} block icon={<PlusOutlined />}>\r\n        Add phone Number\r\n      </Button>\r\n    </Form.Item>\r\n\r\n    </>\r\n)}\r\n</Form.List>\r\n</Form.Item>\r\n</Form.Item>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<Input.Group compact>\r\n\r\n<Form.Item\r\nname={[\"owner_info\", 'keys']}\r\nstyle={{border:\"none\"}}\r\n\r\nrules={[\r\n  {\r\n    required: true,\r\n    message: 'Please input your keys!',\r\n  },\r\n]}>\r\n\r\n<InputNumber  style={{ width: '100%', border:\"none\" }} placeholder=\"keys\" />\r\n\r\n</Form.Item>\r\n\r\n\r\n\r\n<Form.Item\r\nname={[\"owner_info\", 'key_relation']}\r\nstyle={{border:\"none\"}}\r\nrules={[\r\n  {\r\n    required: true,\r\n    message: 'Please input your key_relation!',\r\n  },\r\n]}>\r\n\r\n<Input  style={{ width: '100%' }} placeholder=\"key_relation\" />\r\n\r\n</Form.Item>\r\n\r\n\r\n<Form.Item\r\nname={[\"owner_info\", 'service_charges']}\r\nstyle={{border:\"none\"}}\r\n\r\nrules={[\r\n  {\r\n    required: true,\r\n    message: 'Please input your service_charges!',\r\n  },\r\n]}>\r\n\r\n<InputNumber  style={{ width: '97%', border:\"none\" }} placeholder=\"service_charges\" />\r\n\r\n</Form.Item>\r\n</Input.Group>\r\n\r\n\r\n\r\n<Form.Item\r\nname={['owner_info', 'email']}\r\n\r\n\r\nrules={[\r\n  {\r\n    type: 'email',\r\n    message: 'The input is not valid E-mail!',\r\n  }\r\n]}\r\n>\r\n<Input  style={{ width: '100%' }} placeholder=\"email\"/>\r\n</Form.Item>\r\n\r\n\r\n\r\n\r\n<Form.Item\r\nname={[\"owner_info\", 'land_mark']}\r\nrules={[\r\n  {\r\n    required: true,\r\n    message: 'Please input your land_mark!',\r\n  },\r\n]}>\r\n\r\n<Input placeholder=\"land_mark\" />\r\n\r\n</Form.Item>\r\n\r\n\r\n\r\n\r\n<Form.Item\r\n\r\nname={[\"owner_info\", 'owner_locality']}\r\nrules={[\r\n  {\r\n    required: true,\r\n    message: 'Please input your locality!',\r\n  },\r\n]}>\r\n                <Input placeholder=\"locality\" />\r\n\r\n\r\n</Form.Item>\r\n\r\n<Form.Item\r\n\r\nname={[\"owner_info\", 'owner_address']}\r\nrules={[\r\n  {\r\n    required: true,\r\n    message: 'Please input your username!',\r\n  },\r\n]}\r\n>\r\n<TextArea rows={3} placeholder=\"Address\" />\r\n</Form.Item>\r\n\r\n\r\n\r\n<Form.Item name=\"description\">\r\n<TextArea rows={3} placeholder=\"description\"  />\r\n</Form.Item>\r\n</>\r\n\r\n}\r\n\r\n     \r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" className=\"min-w-full\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n      </div>\r\n    </div>\r\n  \r\n        </div>\r\n   \r\n        </Form>\r\n    )\r\n}\r\n","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\properties\\datatable.js",["198","199"],"import React, {useState, useEffect} from 'react'\r\nimport {Table, Space} from 'antd'\r\nimport {FaRegEdit,  FaRegTrashAlt, FaTrashAlt} from 'react-icons/fa'\r\nimport {AiOutlineClose} from 'react-icons/ai'\r\n\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport { deleteproperty, deleteManyproperty} from '../../../api/PropertySlice'\r\nimport {useDispatch} from 'react-redux'\r\n// import moment from 'moment'\r\nimport DeleteConfirm from '../../shared/deleteConfirm'\r\nimport ExcelBtn from '../../shared/exportExcel'\r\nimport Search from '../../shared/search'\r\nimport styled from 'styled-components'\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function Datatable({data}) {\r\n\r\nconsole.log(data);\r\n    const dispatch = useDispatch()\r\n    const [selectionType, setSelectionType] = useState('checkbox');\r\n    const [selectionKey, setSelectionKey] = useState([]);\r\n\r\n\r\n\r\n    const confirm = (e, id) => {\r\n        dispatch(deleteproperty(id._id))\r\n       \r\n      }\r\n      \r\n      const cancel = (e) =>{\r\n        return null\r\n      }\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'project_name',\r\n          key: 'project_name',\r\n          sorter: (a, b) => a.property_name.length - b.property_name.length,\r\n          sortDirections: ['descend', 'ascend'],\r\n        },  {\r\n          title: 'Type',\r\n          dataIndex: 'property_type',\r\n          render:(text)=>{\r\n return <h6>{text.property_type_info}</h6>\r\n\r\n          },\r\n          key: 'property_type',\r\n        \r\n        },\r\n        {\r\n          title: 'Mobile Number',\r\n          dataIndex: 'owner_info',\r\n          key: 'owner_info',\r\n          render:(data)=>{\r\n\r\n            return <h6>{data.phone_number}</h6>\r\n          }\r\n        },{\r\n          title: 'Budjet',\r\n          dataIndex: 'property_info',\r\n          key: 'email',\r\n          render:(data)=>{\r\n\r\n            return <h6>{data.project_price} {data.price_unit}</h6>\r\n          }\r\n        },\r\n        {\r\n          title: 'email',\r\n          dataIndex: 'owner_info',\r\n          key: 'email',\r\n          render:(data)=>{\r\n\r\n            return <h6>{data.email}</h6>\r\n          }\r\n        }, {\r\n          title: 'Owner Name',\r\n          dataIndex: 'owner_info',\r\n          key: 'contact_by',\r\n          render:(data)=>{\r\nconsole.log(data);\r\n            return <h6>{data.contact_by}</h6>\r\n          }\r\n        },\r\n        {\r\n            title: 'Location',\r\n            dataIndex: 'owner_info',\r\n            key: 'owner_info',\r\n            render:(data)=>{\r\n\r\n              return <h6>{data.owner_locality}</h6>\r\n            }\r\n          },\r\n  \r\n          {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (id) => {\r\n  \r\n  \r\n            return  <Space size=\"middle\" align=\"center\">\r\n                \r\n                <h5 className=\"text-dark\">\r\n                 <Link to={`/dashboard/property/${id._id}`}>\r\n                  <FaRegEdit/> \r\n                   </Link> \r\n                  \r\n                  \r\n                  </h5>\r\n              <h5>\r\n                  <DeleteConfirm confirm={(e)=>confirm(e, id)} title=\"property\" cancel={cancel} >\r\n                      <FaRegTrashAlt   style={{cursor:\"pointer\", color:\"red\"}} />\r\n                  </DeleteConfirm>\r\n              </h5>\r\n  \r\n              </Space>\r\n          },\r\n          },\r\n      ];\r\n\r\n\r\n      const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => {\r\n\r\n\r\n          setSelectionKey(selectedRowKeys)\r\n          console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n        },\r\n        getCheckboxProps: (record) => ({\r\n          disabled: record.name === 'Disabled User',\r\n          // Column configuration not to be checked\r\n          name: record.name,\r\n        }),\r\n      };\r\n\r\n      const variants = {\r\n        open: { opacity: 1, y: 0 },\r\n        closed: { opacity: 0, y: \"3.5rem\" },\r\n      }\r\n\r\n    return (\r\n        <DataTableWrap>\r\n          <div className=\" flex justify-between\">\r\n            <Search title=\"client\"/>\r\n            <ExcelBtn dataSource={data} columns={columns}/>\r\n        </div>\r\n\r\n        <motion.div\r\n          animate={selectionKey.length>0 ? \"open\" : \"closed\"}\r\n          variants={variants}\r\n          // transition={{ duration: 0.2 }}\r\n        id=\"deleteItems\" className=\"flex  justify-between px-4 multidelete items-center \">\r\n\r\n          <div className=\"flex justify-around\" style={{color:\"rgb(17 99 73)\"}}>\r\n            <AiOutlineClose onClick={()=>setSelectionKey([])} className=\"mt-1 cursor-pointer\"/>\r\n            &nbsp; &nbsp;{selectionKey.length}  selected</div>\r\n\r\n          <div className=\"flex justify-around \" style={{color:\"#f44336\"}}>\r\n            <FaTrashAlt onClick={()=>dispatch(deleteManyproperty(selectionKey))} className=\"mt-1 cursor-pointer\"/>  &nbsp; delete</div>\r\n        </motion.div>\r\n         \r\n            <Table \r\n      rowSelection={{\r\n        type: selectionType,\r\n        ...rowSelection,\r\n      }}         \r\n      \r\n      rowKey={record=>record._id}\r\n             dataSource={data} \r\n             columns={columns} />\r\n        </DataTableWrap>\r\n    )\r\n}\r\n\r\n\r\nconst DataTableWrap = styled.div`\r\n\r\nposition:relative;\r\n.multidelete{\r\n\r\n  position:absolute;\r\n  top:0%;\r\n  left:0%;\r\n  transform:translate(-50%, -50%);\r\n  width:100%;\r\n  height:3.5rem;\r\n background-color:#d8f1e9;\r\nfont-size:1rem;\r\n\r\n}\r\n\r\n\r\n\r\n`","E:\\RealEstate_REST_API\\client\\src\\api\\PropertySlice.js",["200","201","202"],"import {createSlice, current} from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\nimport { message } from 'antd';\r\nimport keyUri from '../key'\r\n\r\n\r\n\r\n\r\nexport const initialState = {\r\n\r\n    loading:false,\r\n    hasErrors:false,\r\n\r\n   property:[],\r\n   current_property:null\r\n\r\n\r\n}\r\n\r\nexport const propertySlice = createSlice({\r\n\r\n\r\n    name:\"property\",\r\n    initialState,\r\n    reducers:{\r\n\r\n      getProperty:state =>{\r\n\r\n        state.loading = true;\r\n      },\r\n\r\n      getPropertySuccess: (state, { payload }) =>{\r\n\r\n        state.loading = false;\r\n        state.property  =  payload;\r\n\r\n        \r\n\r\n      },\r\n\r\n      getPropertyError: state =>{\r\n\r\n        state.hasErrors = true;\r\n     \r\n\r\n      },\r\n\r\n      getCurrentProperty: (state, { payload }) =>{\r\n\r\n        state.loading = false;\r\n     state.current_property = payload;\r\n\r\n      },\r\n\r\n      getFilter: (state, { payload }) =>{\r\n\r\n         state.loading = false;\r\n         state.property = payload\r\n      },\r\n\r\n      getPropertyFilterSuccess:(state, {payload}) => {\r\n\r\n        // console.log(current(state.property));\r\n        state.loading = false;\r\n\r\n        state.property = payload\r\n\r\n     \r\n\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n})\r\n\r\n\r\nexport const {getProperty, getFilter, getPropertyFilterSuccess,  getCurrentProperty,\r\n    getPropertySuccess, getPropertyError }  = propertySlice.actions\r\n\r\nexport const propertySelector = state => state.property\r\nexport default propertySlice.reducer\r\n\r\n\r\nconst config = {\r\n    headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n  };\r\n\r\n\r\n  export const fetchAllpropertys = (filterword=null) => async dispatch =>{\r\n    const key = 'login';\r\n    dispatch(getProperty())\r\n\r\n\r\n    try {\r\n        \r\n        const {data} = await axios.get(keyUri + `/api/property?filterword=${filterword}`)\r\n    \r\n        console.log(data);\r\n\r\n        dispatch(getPropertySuccess(data))\r\n\r\n    } catch (error) {\r\n\r\ndispatch(getPropertyError())\r\n// setTimeout(() => {\r\n\r\n//     message.error({ content: error.response.data.msg, key, duration: 2 });\r\n//   }, 100) \r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const createproperty = (values) => async dispatch =>{\r\n    const key = 'login';\r\n    dispatch(getProperty())\r\n    message.loading({ content: 'loading...', key })\r\n\r\n    try {\r\n        \r\n        const {data} = await axios.post(keyUri + '/api/property', values, config)\r\n    \r\n        data &&  message.success({ content: data.msg, key, duration: 2 });\r\n\r\n        dispatch(fetchAllpropertys())\r\n\r\n    } catch (error) {\r\n\r\ndispatch(getPropertyError())\r\nsetTimeout(() => {\r\n\r\n    message.error({ content: error.response.data.msg, key, duration: 2 });\r\n  }, 100) \r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const editproperty = (id, values) => async dispatch =>{\r\n  const key = 'update';\r\n  dispatch(getProperty())\r\n  message.loading({ content: 'loading...', key })\r\nconsole.log(id);\r\n  try {\r\n      \r\n      const {data} = await axios.put(keyUri + `/api/property/${id}`, values, config)\r\n  \r\n      data &&  message.success({ content: data.msg, key, duration: 2 });\r\n\r\n      dispatch(fetchAllpropertys())\r\n\r\n  } catch (error) {\r\n\r\ndispatch(getPropertyError())\r\nsetTimeout(() => {\r\n\r\n  message.error({ content: error.response.data.msg, key, duration: 2 });\r\n}, 100) \r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport const fetchOneproperty = (id) => async dispatch =>{\r\n  const key = 'update';\r\n  dispatch(getProperty())\r\n  \r\n\r\n  try {\r\n      \r\n      const {data} = await axios.get(keyUri + `/api/property/${id}`)\r\n     \r\n      dispatch(getCurrentProperty(data))\r\n\r\n  } catch (error) {\r\n\r\ndispatch(getPropertyError())\r\nsetTimeout(() => {\r\n\r\n  message.error({ content: error.response.data.msg, key, duration: 2 });\r\n}, 100) \r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const deleteproperty = (id) => async dispatch =>{\r\n  const key = 'login';\r\n  dispatch(getProperty())\r\n  message.loading({ content: 'loading...', key })\r\n\r\n  try {\r\n      \r\n      const {data} = await axios.delete(keyUri + `/api/property/${id}`)\r\n  \r\n      data &&  message.success({ content: data.msg, key, duration: 2 });\r\n\r\n      dispatch(fetchAllpropertys())\r\n\r\n  } catch (error) {\r\n\r\ndispatch(getPropertyError())\r\nsetTimeout(() => {\r\n\r\n  message.error({ content: error.response.data.msg, key, duration: 2 });\r\n}, 100) \r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n\r\nexport const deleteManyproperty = (values) => async dispatch =>{\r\n\r\n  console.log(values);\r\n  const key = 'delete';\r\n  dispatch(getProperty())\r\n  message.loading({ content: 'loading...', key })\r\n\r\n  try {\r\n      \r\n      const {data} = await axios.post(keyUri + `/api/property-many`, values, config )\r\n  \r\n      data &&  message.success({ content: data.msg, key, duration: 2 });\r\n\r\n      dispatch(fetchAllpropertys())\r\n\r\n  } catch (error) {\r\n\r\ndispatch(getPropertyError())\r\nsetTimeout(() => {\r\n\r\n  message.error({ content: error.response.data.msg, key, duration: 2 });\r\n}, 100) \r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const fetchFilter = (filterword=null,  bhk= null, price=null, filter = null) => async dispatch =>{\r\n  const key = 'update';\r\n  dispatch(getProperty())\r\n  \r\n// if(filter) {\r\n\r\n\r\n//   return   dispatch(getPropertySuccess(filter))\r\n\r\n\r\n// }\r\n\r\n  try {\r\n    if(price){\r\n\r\n      const {data} = await axios.get(keyUri + `/api/property/filter?filterword=${filterword}&bhk=${bhk}&price1=${price[0]}&price2=${price[1]}`)\r\n      dispatch(getPropertySuccess(data))\r\n\r\n      \r\n    }else if(bhk) {\r\n\r\n      const {data} = await axios.get(keyUri + `/api/property/filter?filterword=${filterword}&bhk=${bhk}`)\r\n      dispatch(getPropertySuccess(data))\r\n\r\n\r\n    } else {\r\n      \r\n      const {data} = await axios.get(keyUri + `/api/property/filter?filterword=${filterword}`)\r\n      dispatch(getPropertySuccess(data))\r\n\r\n    }\r\n\r\n  } catch (error) {\r\n\r\n// dispatch(getPropertyError())\r\n// setTimeout(() => {\r\n\r\n//   message.error({ content: error.response.data.msg, key, duration: 2 });\r\n// }, 100) \r\n\r\n      \r\n  }\r\n \r\n}\r\n\r\n\r\nexport const fethFilterWithBetween = (propertydata) => async dispatch =>{\r\n  dispatch(getProperty())\r\n\r\n  try {\r\n      \r\n      // const {data} = await axios.get(keyUri + `/api/property/filter-between?filter=${filterword}&min=${min}&max=${max}`)\r\n \r\n    \r\n     dispatch(getPropertyFilterSuccess(propertydata))\r\n\r\n\r\n  } catch (error) {\r\n\r\n    dispatch(getPropertyError())\r\n  }\r\n\r\n}","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\properties\\index.js",[],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\properties\\propertytab.js",["203","204","205","206","207"],"import React, { useEffect, useState } from 'react'\r\nimport { Tabs, Row, Slider, Modal, Image, Col, Radio, Button, Drawer } from 'antd';\r\nimport { fetchAllpropertys, fetchFilter, fethFilterWithBetween, propertySelector } from '../../../api/PropertySlice'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SpinLoading from '../../shared/spin';\r\nimport styled from 'styled-components'\r\nimport {motion} from 'framer-motion'\r\nimport { Input, Space , Switch } from 'antd';\r\nimport SearchSelect from '../../shared/filter/selectSearch'\r\nimport { Empty } from 'antd';\r\nimport empltyimg from '../../../images/property.png'\r\nconst { Search } = Input;\r\n const { TabPane } = Tabs;\r\n\r\n\r\n\r\nexport default function Propertytab() {\r\n\r\nconst dispatch = useDispatch()\r\nconst {loading, property} = useSelector(propertySelector)\r\nconst [isModalVisible, setIsModalVisible] = useState(false);\r\nconst [tabkey, setTabkey] = useState(false);\r\nconst [filterProperty, setFilterProperty] = useState([])\r\n\r\nconst [filterActive, setFilterActive] = useState(false)\r\nconst [gallery, setGallery] = useState([])\r\n   useEffect(()=>{\r\n\r\n\r\n    dispatch(fetchAllpropertys())\r\n\r\n\r\n   }, [dispatch])\r\n\r\nfunction callback(key) {\r\n\r\n  setTabkey(key)\r\n  setFilterActive(false)\r\n  dispatch(fetchAllpropertys(key))\r\n\r\n\r\n}\r\n\r\nconst viewGallery = (property_gallery) =>{\r\n\r\nsetIsModalVisible(true);\r\nsetGallery(property_gallery);\r\n\r\n\r\n}\r\n\r\nconst PropertyCard = ({property_gallery,owner_info, property_type, property_name,price_info, furnished_info,  property_info}) =>{\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n\r\n\r\n\r\n  return <PropertyCardWrap \r\n    style={{backgroundColor:\"#f9f9f9\",  marginBottom:\"1.5rem\"}} \r\n     className=\"grid gap-3 grid-cols-5 overflow-hidden  \" >\r\n\r\n<motion.div \r\n    whileHover={{ scale: 1.01 }}\r\n    whileTap={{ scale: 0.99 }}\r\n    onClick={()=>viewGallery(property_gallery)}\r\nclassName=\" col-span-1 overflow-hidden bg-cover  \"\r\n style={{backgroundImage:`url('${property_gallery[0]}')`, cursor:\"zoom-in\"}}>\r\n\r\n\r\n\r\n</motion.div>\r\n<div className=\" col-span-4 px-3 py-3\" >\r\n\r\n<div className=\"flex justify-between items-center\">\r\n<div className=\"flex justify-start items-center \">\r\n<h5 className=\"text-xl text-brandColor\">{property_name}</h5>\r\n  \r\n<p ><b>Price:</b>&nbsp;<span>&#8377;</span>&nbsp;{property_info.project_price}{property_info.price_unit}</p>\r\n\r\n<Button onClick={showDrawer} className=\"ml-4\" size=\"small\" type=\"primary\">View More</Button>\r\n\r\n</div>\r\n\r\n<div>\r\n<p><b>Address:</b>&nbsp;{owner_info.address} <br/>\r\n            {owner_info.phone_number} &nbsp; {owner_info.email}  </p>\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n<div className=\"flex justify-between items-center p-2 mt-3\" \r\nstyle={{backgroundColor:\"var(--backgroundColor)\",borderRadius:\"5px\", borderRight:\"3px solid #B4002F\"}} >\r\n\r\n\r\n<div>\r\n<h6>Site Area</h6>\r\n<p>{property_info.site_area}&nbsp; sqft</p>\r\n\r\n</div>\r\n\r\n<div>\r\n<h6>category</h6>\r\n<p>{property_type.property_catagory}</p>\r\n\r\n</div>\r\n\r\n<div>\r\n<h6>property type</h6>\r\n<p>{property_type.property_type_info}</p>\r\n\r\n</div>\r\n\r\n{/* <div>\r\n<h6>Transection</h6>\r\n<p>{property_info.transection_type}</p>\r\n\r\n</div> */}\r\n\r\n\r\n<div>\r\n<h6>OwnerShip</h6>\r\n<p>{property_info.ownership_type}</p>\r\n\r\n</div>\r\n\r\n<div>\r\n<h6>Sale Type</h6>\r\n<p>{property_info.sale_type}</p>\r\n\r\n</div>\r\n\r\n<div>\r\n<h6>Possession</h6>\r\n<p>{property_info.construction_status}</p>\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div className=\"flex justify-between items-center p-1 mt-3 \" \r\nstyle={{backgroundColor:\"#f5f5f5\",borderRadius:\"5px\", borderRight:\"3px solid grey\"}} >\r\n\r\n\r\n\r\n\r\n\r\n<div>\r\n<h6>Bed Room</h6>\r\n<p>2</p>\r\n\r\n</div>\r\n\r\n<div>\r\n<h6>Bath Room</h6>\r\n<p>{property_info.bath_room}</p>\r\n\r\n</div>\r\n\r\n<div>\r\n<h6>Store Room</h6>\r\n<p>{property_info.store_room}</p>\r\n\r\n</div>\r\n<div>\r\n<h6>floor</h6>\r\n<p>{property_info.floor}</p>\r\n\r\n</div>\r\n\r\n<div>\r\n<h6>Car Parking</h6>\r\n<p>{property_info.car_parking}</p>\r\n\r\n</div>\r\n\r\n<div>\r\n<h6>Balconies</h6>\r\n<p>{property_info.balconies}</p>\r\n\r\n</div>\r\n\r\n<div>\r\n<h6>Furnished Status</h6>\r\n<p>{furnished_info && furnished_info.furnished_status}</p>\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n<Modal width={1000} footer={false}\r\n\r\n\r\n title=\"Property Gallery\" visible={isModalVisible} \r\n onCancel={()=>setIsModalVisible(false)}>\r\n  <div className=\"grid grid-cols-2 gap-5 \">\r\n     {\r\n\r\ngallery.length > 0 && gallery.map((item, i)=>{\r\n\r\n\r\n  return <div key={i}>\r\n   <Image\r\n      width=\"100%\"\r\n      src={item}\r\n    \r\n    />\r\n   \r\n  </div>\r\n\r\n\r\n})\r\n     }\r\n     </div>\r\n      </Modal>\r\n  \r\n  \r\n  <Drawer    \r\n        placement=\"right\"\r\n        width=\"45%\"\r\n        closable={false}\r\n        onClose={onClose}\r\n        visible={visible}>\r\n\r\n\r\n<h2 className=\"text-md p-2 rounded mb-3 \" style={{backgroundColor:\"var(--backgroundColor)\"}}>Owner Info</h2>\r\n\r\n\r\n<div className=\"grid grid-cols-4 gap-3 p_name\">\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>email</p>\r\n  <b>{owner_info.email}</b>\r\n\r\n</div>\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>\r\nkeys</p>\r\n  <b>{owner_info.keys}</b>\r\n\r\n</div>\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>\r\nphone_number</p>\r\n  <b>{owner_info.phone_number}</b>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>\r\nkey_relation</p>\r\n  <b>{owner_info.key_relation}</b>\r\n\r\n</div>\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>\r\nservice_charges</p>\r\n  <b>{owner_info.service_charges}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>\r\nowner_locality</p>\r\n  <b>{owner_info.owner_locality}</b>\r\n\r\n</div>\r\n  \r\n</div>\r\n\r\n<br/>\r\n<br/>\r\n\r\n\r\n<h2 style={{backgroundColor:\"var(--backgroundColor)\"}} className=\"text-md p-2 rounded mb-3\" >Property Info</h2>\r\n<div className=\"grid grid-cols-4 gap-3 p_name\">\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>site area</p>\r\n  <b>{property_info.site_area}</b>\r\n\r\n</div>\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>built area</p>\r\n<b>{property_info.builtup_area}</b>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>site area</p>\r\n<b>{property_info.site_area}</b>\r\n\r\n</div>\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>rent</p>\r\n<b>{property_info.rent}</b>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>Deposite</p>\r\n<b>{property_info.deposit}</b>\r\n\r\n</div>\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>power</p>\r\n<b>{property_info.power}</b>\r\n\r\n</div>\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>build_effeciency</p>\r\n<b>{property_info.build_effeciency}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>escalation</p>\r\n<b>{property_info.escalation}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>ownership_type</p>\r\n<b>{property_info.ownership_type}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>lock_in</p>\r\n<b>{property_info.lock_in}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>rent_free_period</p>\r\n<b>{property_info.rent_free_period}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>Notice Period</p>\r\n<b>{property_info.notice_period}</b>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>sale_type</p>\r\n<b>{property_info.sale_type}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>store_room</p>\r\n<b>{property_info.store_room}</b>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>balconies</p>\r\n<b>{property_info.balconies}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>property_facing</p>\r\n<b>{property_info.property_facing}</b>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>car_parking</p>\r\n<b>{property_info.car_parking}</b>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>bath_room</p>\r\n<b>{property_info.bath_room}</b>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>bed_room</p>\r\n<b>{property_info.bed_room}</b>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>floor</p>\r\n<b>{property_info.floor}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>total_floor</p>\r\n<b>{property_info.total_floor}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>construction_status</p>\r\n<b>{property_info.construction_status}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>property_age</p>\r\n<b>{property_info.property_age}</b>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n<br/>\r\n<br/>\r\n{/* \r\n<h2\r\nstyle={{backgroundColor:\"var(--backgroundColor)\"}}\r\n className=\"text-md p-2 rounded mb-3\" >Furnished Info</h2>\r\n<div className=\"grid grid-cols-4 gap-3 p_name\">\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>furnished_status</p>\r\n  <b>{furnished_info && furnished_info.furnished_status}</b>\r\n\r\n</div>\r\n\r\n{\r\n\r\nfurnished_info.furnished_status !== \"unfurnished\" && <>\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>discussion_room</p>\r\n  <b>{furnished_info.discussion_room}</b>\r\n\r\n</div>\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>board_room</p>\r\n  <b>{furnished_info.board_room}</b>\r\n\r\n</div>\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>training_room</p>\r\n  <b>{furnished_info.training_room}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>conference_room</p>\r\n  <b>{furnished_info.conference_room}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>electrical_room</p>\r\n  <b>{furnished_info.electrical_room}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>server_room</p>\r\n  <b>{furnished_info.server_room}</b>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>EPABX</p>\r\n  <b>{furnished_info.EPABX}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>pantry</p>\r\n  <b>{furnished_info.pantry}</b>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>airconditioning</p>\r\n  <b>{furnished_info.airconditioning}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>project_head</p>\r\n  <b>{furnished_info.project_head}</b>\r\n\r\n</div>\r\n\r\n\r\n<div className=\" px-2 shadow\" style={{backgroundColor:\"#f5f5f5\"}}>\r\n\r\n<p style={{color:\"\", margin:\"0\", fontWeight:\"semi-bold\"}}>date_of_furnishing</p>\r\n  <b>{furnished_info.date_of_furnishing}</b>\r\n\r\n</div>\r\n\r\n\r\n</>\r\n\r\n}\r\n</div> */}\r\n\r\n\r\n  </Drawer>\r\n  \r\n  </PropertyCardWrap>\r\n\r\n}\r\n\r\n\r\nconst PropertyCardWrap = styled.div`\r\n /* box-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12); */\r\nborder-radius:1rem;\r\n\r\n\r\n\r\np{\r\n\r\n  margin-bottom:0;\r\n  text-align:center;\r\n  font-size:0.8rem;\r\n}\r\nh6{\r\n\r\n  font-size:0.8rem;\r\n}\r\n\r\n`\r\n\r\nconst [client_type, setClient] = useState('rent')\r\nconst [bhk, setBhk] = useState()\r\n\r\n\r\nconst onAfterChange  = (value, filter) => {\r\n\r\n  \r\n  dispatch(fetchFilter(client_type, bhk, value)) \r\n\r\n}\r\n\r\nconst activeFilter = (checked, currFilter) =>{\r\n\r\n\r\n  if(checked) {\r\n\r\n  setFilterActive(true)\r\n  } else {\r\n\r\n    setFilterActive(false)\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nlet L = (client_type === 'seller') ? 'Cr' : 'L'\r\n\r\n\r\nconst handleFilterBHK = (value) =>{\r\n\r\n  setBhk(value)\r\n  dispatch(fetchFilter(client_type, value)) \r\n\r\n}\r\n\r\n\r\nconst onChange = e => {\r\n\r\n dispatch(fetchFilter(e.target.value)) \r\n\r\n  setClient(e.target.value);\r\n  \r\n\r\n\r\n};\r\n\r\n    return (\r\n        <Row gutter={20}>\r\n          <Col span={18}  style={{height:\"85vh\", overflowY:\"auto\"}}>\r\n  <Tabs defaultActiveKey=\"null\" onChange={callback}>\r\n\r\n\r\n  <TabPane tab=\"All Property\"    key=\"null\">\r\n      \r\n    {\r\n\r\n\r\n    loading ? <SpinLoading/> : filterActive ? property.length < 1 ? <Empty \r\n    image={<img className=\"block mx-auto mt-10 opacity-40\" src={empltyimg} alt=\"empty\" />}\r\n    description={<h5 className=\"text-xl opacity-20\" >No Property Availaible!</h5>}/> : property.map((item, i)=>{\r\n\r\n   \r\n\r\n      return  <PropertyCard {...item} key={i}/>  \r\n\r\n    }) :   property.map((item, i)=>{\r\n\r\n    \r\n      return <PropertyCard {...item} key={i}/>\r\n\r\n    })\r\n  }\r\n    </TabPane>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <TabPane tab=\"Commercial\" key=\"commercial\">\r\n      \r\n    {\r\n\r\n\r\n    loading ? <SpinLoading/> : filterActive ? property.length < 1 ? <Empty \r\n    image={<img className=\"block mx-auto mt-10 opacity-40\" src={empltyimg} alt=\"empty\" />}\r\n    description={<h5 className=\"text-xl opacity-20\" >No Property Availaible!</h5>}/> : property.map((item, i)=>{\r\n\r\n      return  <PropertyCard {...item} key={i}/>  \r\n\r\n    }) :   property.map((item, i)=>{\r\n\r\n    \r\n      return <PropertyCard {...item} key={i}/>\r\n\r\n    })\r\n  }\r\n    </TabPane>\r\n    <TabPane tab=\"Residential\" key=\"residential\">\r\n    {\r\n    loading ? <SpinLoading/> : filterActive ? filterProperty.map((item, i)=>{\r\n\r\n\r\n      return filterProperty.length > 0 ? <PropertyCard {...item} key={i}/> : <h5 className=\"my-10\">No Property Availaible !</h5>\r\n\r\n    }) :   property.map((item, i)=>{\r\n\r\n\r\n      return <PropertyCard {...item} key={i}/>\r\n\r\n    })\r\n  }\r\n    </TabPane>\r\n\r\n    <TabPane tab=\"Wharehouse\" key=\"wharehouse\">\r\n    {\r\n    loading ? <SpinLoading/> : filterActive ? property.map((item, i)=>{\r\n\r\n\r\n      return property.length > 0 ? <PropertyCard {...item} key={i}/> : <h5 className=\"my-10\">No Property Availaible !</h5>\r\n\r\n    }) :   property.map((item, i)=>{\r\n\r\n\r\n      return <PropertyCard {...item} key={i}/>\r\n\r\n    })\r\n  }\r\n    </TabPane>\r\n\r\n  </Tabs>\r\n </Col>\r\n\r\n <Col span={6} >\r\n \r\n <h1>Filtering</h1>\r\n <h4 className=\"my-5 ml-2\">Applay Filter &nbsp; <Switch size=\"small\"  onChange={(checked)=>activeFilter(checked, 'price') } /></h4>\r\n\r\n\r\n <Radio.Group disabled={filterActive? false : true} onChange={onChange} value={client_type} defaultValue=\"residential\" size=\"middle\">\r\n      <Radio.Button value=\"rent\">Rent</Radio.Button>\r\n      <Radio.Button value=\"lease\">Lease</Radio.Button>\r\n      <Radio.Button value=\"seller\">Seller</Radio.Button>\r\n    </Radio.Group> \r\n\r\n<br/>\r\n<br/>\r\n<SearchSelect tabtitle={tabkey} filter=\"furnished_status\" client_type={client_type}/>\r\n\r\n<br/><br/>\r\n\r\n<h4>Filter By BedRoom</h4>\r\n<Slider\r\n   disabled={filterActive ? false : true}\r\n   step={1}\r\n      min={1}\r\n      max={10}\r\n    defaultValue={2}\r\n      onAfterChange={handleFilterBHK}\r\n      marks ={\r\n        {2: '2',\r\n         4:'4',\r\n         6:'6',\r\n         8:'8',\r\n         10:'10'\r\n\r\n       \r\n       \r\n        }}\r\n\r\n    />\r\n\r\n<br/><br/>\r\n\r\n<Slider\r\ndisabled={filterActive? false : true}\r\n      range\r\n      step={10}\r\n      marks ={\r\n        {5: '5' + L,\r\n        20:'20' + L,\r\n         40:'40'+ L,\r\n         60:'60'+ L,\r\n         80:'80'+ L,\r\n         100:'100' + L + '+',\r\n       \r\n       \r\n        }\r\n\r\n      }\r\n     \r\n      defaultValue={[5, 20]}\r\n      \r\n      onAfterChange={(value)=>onAfterChange(value, 'total_price')}\r\n    /> \r\n\r\n<br/><br/>\r\n\r\n\r\n\r\n\r\n \r\n </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst PropertyTabWrap = styled.div `\r\n\r\n\r\n\r\n\r\n\r\n\r\n`","E:\\RealEstate_REST_API\\client\\src\\components\\shared\\filter\\selectSearch.js",["208","209","210"],"import React from 'react'\r\nimport { Select } from 'antd';\r\nimport {fetchFilter, propertySelector} from '../../../api/PropertySlice'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nconst { Option } = Select;\r\nexport default function SelectSearch({filter, client_type}) {\r\n\r\n\r\nconst dispatch = useDispatch()\r\nconst {property} = useSelector(propertySelector)\r\n    function onChange(value) {\r\nreturn\r\n    //   const filterproperty = property.filter(item =>{\r\n\r\n    //     return item.furnished_info.furnished_status === value\r\n    //   }) \r\n\r\n    // dispatch(fetchFilter(client_type, null, null, filterproperty))\r\n      }\r\n      \r\n      function onBlur() {\r\n        console.log('blur');\r\n      }\r\n      \r\n      function onFocus() {\r\n        console.log('focus');\r\n      }\r\n      \r\n      function onSearchSelect(val) {\r\n        console.log('search:', val);\r\n      }\r\n\r\n\r\n    return (\r\n        <div>\r\n             <Select\r\n    showSearch\r\n    style={{ width: 200 }}\r\n    placeholder={filter}\r\n    optionFilterProp=\"children\"\r\n    onChange={onChange}\r\n    onFocus={onFocus}\r\n    onBlur={onBlur}\r\n    onSearch={onSearchSelect}\r\n    filterOption={(input, option) =>\r\n      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n    }\r\n  >\r\n   \r\n{\r\n\r\nfilter === 'furnished_status' && <>\r\n   <Option  value=\"furnished\">furnished</Option>\r\n   <Option  value=\"semi-furnished\">semi-furnished</Option>\r\n   <Option  value=\"unfurnished\">un-furnished</Option>\r\n</>\r\n}\r\n\r\n{\r\n\r\nfilter === 'bath_room' && <>\r\n   <Option  value={1}>1</Option>\r\n   <Option  value={2}>2</Option>\r\n   <Option  value={3}>3</Option>\r\n   <Option  value={4}>4</Option>\r\n   <Option  value={5}>5</Option>\r\n   <Option  value={6}>6</Option>\r\n   <Option  value={7}>7+</Option>\r\n\r\n</>\r\n}\r\n\r\n    \r\n  \r\n  </Select>\r\n        </div>\r\n    )\r\n}\r\n","E:\\RealEstate_REST_API\\client\\src\\api\\propertySettings.js",["211","212"],"import {createSlice} from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\nimport { message } from 'antd';\r\nimport keyUri from '../key'\r\n\r\n\r\n\r\n\r\nexport const initialState = {\r\n\r\n    loading:false,\r\n    hasErrors:false,\r\n    settings:[]\r\n\r\n\r\n}\r\n\r\nexport const PropertySettingSlice = createSlice({\r\n\r\n\r\n    name:\"Settings\",\r\n    initialState,\r\n    reducers:{\r\n\r\n      getPropertySetting:state =>{\r\n\r\n        state.loading = true;\r\n      },\r\n\r\n      getPropertySettingSuccess: (state, { payload }) =>{\r\n\r\n        state.loading = false;\r\n        state.settings  =  payload;\r\n\r\n        \r\n\r\n      },\r\n\r\n      getPropertySettingError: state =>{\r\n\r\n        state.hasErrors = true;\r\n     \r\n\r\n      },\r\n\r\n      getCurrentPropertySetting: (state, { payload }) =>{\r\n\r\n        state.loading = false;\r\n     state.current_PropertySetting = payload;\r\n\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n})\r\n\r\n\r\nexport const {getPropertySetting, getCurrentPropertySetting,  getPropertySettingSuccess, getPropertySettingError }  = PropertySettingSlice.actions\r\n\r\nexport const PropertySettingSelector = state => state.settings\r\nexport default PropertySettingSlice.reducer\r\n\r\n\r\nconst config = {\r\n    headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n    }\r\n  };\r\n\r\n\r\n  export const creatPropertySettings = (values) => async dispatch =>{\r\n    const key = 'login';\r\n    dispatch(getPropertySetting())\r\n\r\n    try {\r\n        \r\n        const {data} = await axios.post(keyUri + '/api/setting-property', values, config)\r\n  \r\n        dispatch(getPropertySettingSuccess(data))\r\n\r\n    } catch (error) {\r\n\r\ndispatch(getPropertySettingError())\r\n\r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\n  export const fetchAllPropertySettings = () => async dispatch =>{\r\n    dispatch(getPropertySetting())\r\n\r\n\r\n    try {\r\n        \r\n        const {data} = await axios.get(keyUri + '/api/setting-property')\r\n  \r\n        console.log(data);\r\n        dispatch(getPropertySettingSuccess(data))\r\n\r\n    } catch (error) {\r\n\r\ndispatch(getPropertySettingError())\r\n\r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const fetchSettings = (values) => async dispatch =>{\r\n  dispatch(getPropertySetting())\r\n\r\nlet datavalue = {\r\n\r\n  property_type:values.value,\r\n  property:values.text,\r\n\r\n\r\n}\r\n\r\n  try {\r\n      \r\n      const {data} = await axios.post(keyUri + '/api/setting', datavalue, config)\r\n\r\n       message.success('success!')\r\n      dispatch(fetchAllSettings())\r\n      setTimeout(()=>{\r\n         window.location.reload()\r\n      }, 1000)\r\n     \r\n\r\n  } catch (error) {\r\n\r\ndispatch(getPropertySettingError())\r\n\r\n\r\n      \r\n  }\r\n\r\n}\r\n\r\n\r\nexport const fetchAllSettings = () => async dispatch =>{\r\n  dispatch(getPropertySetting())\r\n\r\n\r\n  try {\r\n      \r\n      const {data} = await axios.get(keyUri + '/api/setting')\r\n\r\n      console.log(data);\r\n      dispatch(getPropertySettingSuccess(data.settings))\r\n\r\n  } catch (error) {\r\n\r\ndispatch(getPropertySettingError())\r\n\r\n\r\n      \r\n  }\r\n\r\n}","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\settings\\intialSetting.js",["213"],"E:\\RealEstate_REST_API\\client\\src\\components\\pages\\settings\\adminSetting.js",["214","215","216","217"],"import React,{ useState} from 'react'\r\nimport { Button, Radio, Input } from 'antd';\r\nimport axios from 'axios';\r\nimport BACK_END_URI from '../../../key';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {fetchSettings,  PropertySettingSelector} from '../../../api/propertySettings'\r\n\r\nexport default function AdminSetting() {\r\n\r\n    const [value, setValue] = useState('residential');\r\n    const [text, setText] = useState();\r\n\r\nconst dispatch = useDispatch()\r\n\r\n\r\n    const onChange = e => {\r\n      setValue(e.target.value);\r\n    };\r\n\r\n\r\n    const handleChange = (e) =>{\r\n        setText(e.target.value)\r\n    \r\n        }\r\n\r\n     \r\n\r\n    const handleClick = () =>{\r\n\r\n      \r\n\r\n        dispatch(fetchSettings({value, text}))\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <Radio.Group onChange={onChange} value={value} defaultValue=\"residential\" size=\"middle\">\r\n      <Radio.Button value=\"residential\">Residential</Radio.Button>\r\n      <Radio.Button value=\"commercial\">Commercial</Radio.Button>\r\n      <Radio.Button value=\"warehouse\">Warehouse</Radio.Button>\r\n    </Radio.Group> \r\n    <br/>\r\n    <br/>\r\n    <Input style={{width:\"40%\"}} onChange={handleChange} placeholder=\"Basic usage\" />\r\n <br/>\r\n    <br/>\r\n    <Button type=\"primary\" onClick={handleClick}>Submit</Button>\r\n        </div>\r\n    )\r\n}\r\n","E:\\RealEstate_REST_API\\client\\src\\components\\pages\\properties\\editProperty.js",["218","219"],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":1,"column":16,"nodeType":"226","messageId":"227","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"229","line":15,"column":27,"nodeType":"230","endLine":15,"endColumn":49},{"ruleId":"224","severity":1,"message":"231","line":2,"column":40,"nodeType":"226","messageId":"227","endLine":2,"endColumn":48},{"ruleId":"224","severity":1,"message":"232","line":6,"column":9,"nodeType":"226","messageId":"227","endLine":6,"endColumn":19},{"ruleId":"224","severity":1,"message":"233","line":13,"column":8,"nodeType":"226","messageId":"227","endLine":13,"endColumn":15},{"ruleId":"234","severity":1,"message":"235","line":23,"column":4,"nodeType":"236","endLine":23,"endColumn":20,"suggestions":"237"},{"ruleId":"224","severity":1,"message":"232","line":6,"column":26,"nodeType":"226","messageId":"227","endLine":6,"endColumn":36},{"ruleId":"234","severity":1,"message":"238","line":54,"column":4,"nodeType":"236","endLine":54,"endColumn":40,"suggestions":"239"},{"ruleId":"224","severity":1,"message":"225","line":1,"column":16,"nodeType":"226","messageId":"227","endLine":1,"endColumn":25},{"ruleId":"224","severity":1,"message":"240","line":1,"column":27,"nodeType":"226","messageId":"227","endLine":1,"endColumn":35},{"ruleId":"224","severity":1,"message":"241","line":2,"column":30,"nodeType":"226","messageId":"227","endLine":2,"endColumn":44},{"ruleId":"224","severity":1,"message":"242","line":3,"column":19,"nodeType":"226","messageId":"227","endLine":3,"endColumn":24},{"ruleId":"224","severity":1,"message":"243","line":5,"column":9,"nodeType":"226","messageId":"227","endLine":5,"endColumn":24},{"ruleId":"224","severity":1,"message":"244","line":6,"column":9,"nodeType":"226","messageId":"227","endLine":6,"endColumn":21},{"ruleId":"224","severity":1,"message":"245","line":7,"column":8,"nodeType":"226","messageId":"227","endLine":7,"endColumn":16},{"ruleId":"224","severity":1,"message":"246","line":8,"column":9,"nodeType":"226","messageId":"227","endLine":8,"endColumn":29},{"ruleId":"224","severity":1,"message":"247","line":9,"column":9,"nodeType":"226","messageId":"227","endLine":9,"endColumn":20},{"ruleId":"224","severity":1,"message":"248","line":10,"column":9,"nodeType":"226","messageId":"227","endLine":10,"endColumn":13},{"ruleId":"224","severity":1,"message":"249","line":15,"column":7,"nodeType":"226","messageId":"227","endLine":15,"endColumn":15},{"ruleId":"224","severity":1,"message":"246","line":5,"column":9,"nodeType":"226","messageId":"227","endLine":5,"endColumn":29},{"ruleId":"224","severity":1,"message":"247","line":6,"column":9,"nodeType":"226","messageId":"227","endLine":6,"endColumn":20},{"ruleId":"224","severity":1,"message":"250","line":9,"column":3,"nodeType":"226","messageId":"227","endLine":9,"endColumn":23},{"ruleId":"251","severity":1,"message":"252","line":152,"column":5,"nodeType":"253","messageId":"254","endLine":157,"endColumn":24},{"ruleId":"224","severity":1,"message":"255","line":77,"column":11,"nodeType":"226","messageId":"227","endLine":77,"endColumn":14},{"ruleId":"224","severity":1,"message":"225","line":1,"column":26,"nodeType":"226","messageId":"227","endLine":1,"endColumn":35},{"ruleId":"224","severity":1,"message":"256","line":21,"column":27,"nodeType":"226","messageId":"227","endLine":21,"endColumn":43},{"ruleId":"224","severity":1,"message":"257","line":7,"column":35,"nodeType":"226","messageId":"227","endLine":7,"endColumn":51},{"ruleId":"224","severity":1,"message":"258","line":49,"column":9,"nodeType":"226","messageId":"227","endLine":49,"endColumn":16},{"ruleId":"259","severity":1,"message":"260","line":71,"column":9,"nodeType":"261","messageId":"262","endLine":71,"endColumn":22},{"ruleId":"234","severity":1,"message":"263","line":95,"column":4,"nodeType":"236","endLine":95,"endColumn":14,"suggestions":"264"},{"ruleId":"224","severity":1,"message":"265","line":2,"column":23,"nodeType":"226","messageId":"227","endLine":2,"endColumn":29},{"ruleId":"224","severity":1,"message":"266","line":2,"column":47,"nodeType":"226","messageId":"227","endLine":2,"endColumn":52},{"ruleId":"224","severity":1,"message":"267","line":3,"column":9,"nodeType":"226","messageId":"227","endLine":3,"endColumn":25},{"ruleId":"224","severity":1,"message":"247","line":4,"column":22,"nodeType":"226","messageId":"227","endLine":4,"endColumn":33},{"ruleId":"224","severity":1,"message":"268","line":5,"column":8,"nodeType":"226","messageId":"227","endLine":5,"endColumn":14},{"ruleId":"224","severity":1,"message":"269","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":26,"nodeType":"226","messageId":"227","endLine":1,"endColumn":35},{"ruleId":"224","severity":1,"message":"256","line":21,"column":27,"nodeType":"226","messageId":"227","endLine":21,"endColumn":43},{"ruleId":"224","severity":1,"message":"270","line":3,"column":9,"nodeType":"226","messageId":"227","endLine":3,"endColumn":25},{"ruleId":"224","severity":1,"message":"225","line":1,"column":26,"nodeType":"226","messageId":"227","endLine":1,"endColumn":35},{"ruleId":"224","severity":1,"message":"256","line":21,"column":27,"nodeType":"226","messageId":"227","endLine":21,"endColumn":43},{"ruleId":"224","severity":1,"message":"271","line":1,"column":22,"nodeType":"226","messageId":"227","endLine":1,"endColumn":29},{"ruleId":"224","severity":1,"message":"255","line":95,"column":11,"nodeType":"226","messageId":"227","endLine":95,"endColumn":14},{"ruleId":"224","severity":1,"message":"255","line":265,"column":9,"nodeType":"226","messageId":"227","endLine":265,"endColumn":12},{"ruleId":"224","severity":1,"message":"272","line":3,"column":42,"nodeType":"226","messageId":"227","endLine":3,"endColumn":63},{"ruleId":"224","severity":1,"message":"273","line":8,"column":17,"nodeType":"226","messageId":"227","endLine":8,"endColumn":22},{"ruleId":"224","severity":1,"message":"274","line":12,"column":9,"nodeType":"226","messageId":"227","endLine":12,"endColumn":15},{"ruleId":"224","severity":1,"message":"275","line":23,"column":24,"nodeType":"226","messageId":"227","endLine":23,"endColumn":41},{"ruleId":"224","severity":1,"message":"276","line":854,"column":7,"nodeType":"226","messageId":"227","endLine":854,"endColumn":22},{"ruleId":"224","severity":1,"message":"277","line":3,"column":9,"nodeType":"226","messageId":"227","endLine":3,"endColumn":20},{"ruleId":"224","severity":1,"message":"249","line":9,"column":7,"nodeType":"226","messageId":"227","endLine":9,"endColumn":15},{"ruleId":"224","severity":1,"message":"278","line":10,"column":8,"nodeType":"226","messageId":"227","endLine":10,"endColumn":16},{"ruleId":"224","severity":1,"message":"255","line":75,"column":11,"nodeType":"226","messageId":"227","endLine":75,"endColumn":14},{"ruleId":"224","severity":1,"message":"279","line":129,"column":14,"nodeType":"226","messageId":"227","endLine":129,"endColumn":18},{"ruleId":"224","severity":1,"message":"280","line":2,"column":8,"nodeType":"226","messageId":"227","endLine":2,"endColumn":19},{"ruleId":"224","severity":1,"message":"269","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":13},{"ruleId":"224","severity":1,"message":"281","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":20},{"ruleId":"224","severity":1,"message":"247","line":5,"column":22,"nodeType":"226","messageId":"227","endLine":5,"endColumn":33},{"ruleId":"224","severity":1,"message":"282","line":6,"column":25,"nodeType":"226","messageId":"227","endLine":6,"endColumn":48},{"ruleId":"224","severity":1,"message":"283","line":8,"column":25,"nodeType":"226","messageId":"227","endLine":8,"endColumn":40},{"ruleId":"234","severity":1,"message":"284","line":155,"column":4,"nodeType":"236","endLine":155,"endColumn":14,"suggestions":"285"},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Checkbox' is defined but never used.","'useHistory' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["288"],"React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["289"],"'useState' is defined but never used.","'LogoutOutlined' is defined but never used.","'Badge' is defined but never used.","'MdNotifications' is defined but never used.","'UserOutlined' is defined but never used.","'Dropdown' is defined but never used.","'authenticateSelector' is defined but never used.","'useSelector' is defined but never used.","'Link' is defined but never used.","'dispatch' is assigned a value but never used.","'QuestionCircleFilled' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'key' is assigned a value but never used.","'setSelectionType' is assigned a value but never used.","'fetchAllSettings' is defined but never used.","'loadnig' is assigned a value but never used.","no-dupe-keys","Duplicate key 'customer_type'.","ObjectExpression","unexpected","React Hook useEffect has missing dependencies: 'current_client', 'form', and 'id'. Either include them or remove the dependency array.",["290"],"'Upload' is defined but never used.","'Radio' is defined but never used.","'employeeSelector' is defined but never used.","'keyUri' is defined but never used.","'axios' is defined but never used.","'propertySelector' is defined but never used.","'current' is defined but never used.","'fethFilterWithBetween' is defined but never used.","'Space' is defined but never used.","'Search' is assigned a value but never used.","'setFilterProperty' is assigned a value but never used.","'PropertyTabWrap' is assigned a value but never used.","'fetchFilter' is defined but never used.","'property' is assigned a value but never used.","'data' is assigned a value but never used.","'TypeSetting' is defined but never used.","'BACK_END_URI' is defined but never used.","'PropertySettingSelector' is defined but never used.","'fetchAllClients' is defined but never used.","React Hook useEffect has missing dependencies: 'current_property', 'form', and 'id'. Either include them or remove the dependency array.",["291"],"no-global-assign","no-unsafe-negation",{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [history, isAuthenticate]",{"range":"300","text":"301"},"Update the dependencies array to be: [dispatch, isAuthenticate, history, location.pathname]",{"range":"302","text":"303"},"Update the dependencies array to be: [current_client, dispatch, form, id]",{"range":"304","text":"305"},"Update the dependencies array to be: [current_property, dispatch, form, id]",{"range":"306","text":"307"},[705,721],"[history, isAuthenticate]",[1424,1460],"[dispatch, isAuthenticate, history, location.pathname]",[2466,2476],"[current_client, dispatch, form, id]",[5243,5253],"[current_property, dispatch, form, id]"]